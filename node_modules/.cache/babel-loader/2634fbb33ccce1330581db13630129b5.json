{"ast":null,"code":"var _jsxFileName = \"/home/tawfek/code/src/content/dashboards/Tasks/TasksAnalyticsChart.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { Bar } from 'react-chartjs-2';\nimport { useTheme } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TasksAnalyticsChart = _ref => {\n  _s();\n\n  let {\n    data: dataProp,\n    labels,\n    ...rest\n  } = _ref;\n  const theme = useTheme();\n  const data = {\n    datasets: [{\n      label: 'Tasks Created',\n      backgroundColor: theme.colors.primary.main,\n      data: dataProp.expenses,\n      barThickness: 12,\n      maxBarThickness: 18,\n      barPercentage: 0.5,\n      categoryPercentage: 0.5\n    }, {\n      label: 'Tasks Completed',\n      backgroundColor: theme.colors.primary.lighter,\n      data: dataProp.income,\n      barThickness: 12,\n      maxBarThickness: 18,\n      barPercentage: 0.5,\n      categoryPercentage: 0.5\n    }],\n    labels\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    cornerRadius: 6,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [{\n        gridLines: {\n          display: false,\n          drawBorder: false\n        },\n        ticks: {\n          padding: 18,\n          fontColor: theme.palette.text.secondary\n        }\n      }],\n      yAxes: [{\n        gridLines: {\n          borderDash: [6],\n          borderDashOffset: [0],\n          color: theme.palette.divider,\n          drawBorder: false,\n          zeroLineBorderDash: [6],\n          zeroLineBorderDashOffset: [0],\n          zeroLineColor: theme.palette.divider\n        },\n        ticks: {\n          padding: 12,\n          fontColor: theme.palette.text.secondary,\n          beginAtZero: true,\n          min: 0,\n          maxTicksLimit: 8\n        }\n      }]\n    },\n    tooltips: {\n      enabled: true,\n      caretSize: 6,\n      displayColors: false,\n      mode: 'label',\n      intersect: true,\n      yPadding: 8,\n      xPadding: 16,\n      borderWidth: 4,\n      bodySpacing: 10,\n      titleFontSize: 16,\n      borderColor: theme.palette.common.black,\n      backgroundColor: theme.palette.common.black,\n      titleFontColor: theme.palette.common.white,\n      bodyFontColor: theme.palette.common.white,\n      footerFontColor: theme.palette.common.white\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...rest,\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TasksAnalyticsChart, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = TasksAnalyticsChart;\nTasksAnalyticsChart.propTypes = {\n  data: PropTypes.object.isRequired,\n  labels: PropTypes.array.isRequired\n};\nexport default TasksAnalyticsChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksAnalyticsChart\");","map":{"version":3,"sources":["/home/tawfek/code/src/content/dashboards/Tasks/TasksAnalyticsChart.js"],"names":["PropTypes","Bar","useTheme","TasksAnalyticsChart","data","dataProp","labels","rest","theme","datasets","label","backgroundColor","colors","primary","main","expenses","barThickness","maxBarThickness","barPercentage","categoryPercentage","lighter","income","options","responsive","maintainAspectRatio","cornerRadius","legend","display","layout","padding","scales","xAxes","gridLines","drawBorder","ticks","fontColor","palette","text","secondary","yAxes","borderDash","borderDashOffset","color","divider","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","beginAtZero","min","maxTicksLimit","tooltips","enabled","caretSize","displayColors","mode","intersect","yPadding","xPadding","borderWidth","bodySpacing","titleFontSize","borderColor","common","black","titleFontColor","white","bodyFontColor","footerFontColor","propTypes","object","isRequired","array"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { Bar } from 'react-chartjs-2';\nimport { useTheme } from '@mui/material';\n\nconst TasksAnalyticsChart = ({\n  data: dataProp,\n  labels,\n  ...rest\n}) => {\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        label: 'Tasks Created',\n        backgroundColor: theme.colors.primary.main,\n        data: dataProp.expenses,\n        barThickness: 12,\n        maxBarThickness: 18,\n        barPercentage: 0.5,\n        categoryPercentage: 0.5\n      },\n      {\n        label: 'Tasks Completed',\n        backgroundColor: theme.colors.primary.lighter,\n        data: dataProp.income,\n        barThickness: 12,\n        maxBarThickness: 18,\n        barPercentage: 0.5,\n        categoryPercentage: 0.5\n      }\n    ],\n    labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    cornerRadius: 6,\n        legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            padding: 18,\n            fontColor: theme.palette.text.secondary\n          }\n        }\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            borderDash: [6],\n            borderDashOffset: [0],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [6],\n            zeroLineBorderDashOffset: [0],\n            zeroLineColor: theme.palette.divider\n          },\n          ticks: {\n            padding: 12,\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0,\n            maxTicksLimit: 8\n          }\n        }\n      ]\n    },\n    tooltips: {\n      enabled: true,\n      caretSize: 6,\n      displayColors: false,\n      mode: 'label',\n      intersect: true,\n      yPadding: 8,\n      xPadding: 16,\n      borderWidth: 4,\n      bodySpacing: 10,\n      titleFontSize: 16,\n      borderColor: theme.palette.common.black,\n      backgroundColor: theme.palette.common.black,\n      titleFontColor: theme.palette.common.white,\n      bodyFontColor: theme.palette.common.white,\n      footerFontColor: theme.palette.common.white\n    }\n  };\n\n  return (\n    <div {...rest}>\n      <Bar data={data} options={options} />\n    </div>\n  );\n};\n\nTasksAnalyticsChart.propTypes = {\n  data: PropTypes.object.isRequired,\n  labels: PropTypes.array.isRequired\n};\n\nexport default TasksAnalyticsChart;\n"]},"metadata":{},"sourceType":"module"}