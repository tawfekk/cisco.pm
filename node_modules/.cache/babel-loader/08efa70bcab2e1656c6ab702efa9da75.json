{"ast":null,"code":"var prefix = require('prefix-style');\n\nvar toCamelCase = require('to-camel-case');\n\nvar cache = {\n  'float': 'cssFloat'\n};\n\nvar addPxToStyle = require('add-px-to-style');\n\nfunction style(element, property, value) {\n  var camel = cache[property];\n\n  if (typeof camel === 'undefined') {\n    camel = detect(property);\n  } // may be false if CSS prop is unsupported\n\n\n  if (camel) {\n    if (value === undefined) {\n      return element.style[camel];\n    }\n\n    element.style[camel] = addPxToStyle(camel, value);\n  }\n}\n\nfunction each(element, properties) {\n  for (var k in properties) {\n    if (properties.hasOwnProperty(k)) {\n      style(element, k, properties[k]);\n    }\n  }\n}\n\nfunction detect(cssProp) {\n  var camel = toCamelCase(cssProp);\n  var result = prefix(camel);\n  cache[camel] = cache[cssProp] = cache[result] = result;\n  return result;\n}\n\nfunction set() {\n  if (arguments.length === 2) {\n    if (typeof arguments[1] === 'string') {\n      arguments[0].style.cssText = arguments[1];\n    } else {\n      each(arguments[0], arguments[1]);\n    }\n  } else {\n    style(arguments[0], arguments[1], arguments[2]);\n  }\n}\n\nmodule.exports = set;\nmodule.exports.set = set;\n\nmodule.exports.get = function (element, properties) {\n  if (Array.isArray(properties)) {\n    return properties.reduce(function (obj, prop) {\n      obj[prop] = style(element, prop || '');\n      return obj;\n    }, {});\n  } else {\n    return style(element, properties || '');\n  }\n};","map":{"version":3,"sources":["/home/tawfek/code/node_modules/dom-css/index.js"],"names":["prefix","require","toCamelCase","cache","addPxToStyle","style","element","property","value","camel","detect","undefined","each","properties","k","hasOwnProperty","cssProp","result","set","arguments","length","cssText","module","exports","get","Array","isArray","reduce","obj","prop"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,cAAD,CAApB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAIE,KAAK,GAAG;AAAE,WAAS;AAAX,CAAZ;;AACA,IAAIC,YAAY,GAAGH,OAAO,CAAC,iBAAD,CAA1B;;AAEA,SAASI,KAAT,CAAgBC,OAAhB,EAAyBC,QAAzB,EAAmCC,KAAnC,EAA0C;AACxC,MAAIC,KAAK,GAAGN,KAAK,CAACI,QAAD,CAAjB;;AACA,MAAI,OAAOE,KAAP,KAAiB,WAArB,EAAkC;AAChCA,IAAAA,KAAK,GAAGC,MAAM,CAACH,QAAD,CAAd;AACD,GAJuC,CAMxC;;;AACA,MAAIE,KAAJ,EAAW;AACT,QAAID,KAAK,KAAKG,SAAd,EAAyB;AACvB,aAAOL,OAAO,CAACD,KAAR,CAAcI,KAAd,CAAP;AACD;;AAEDH,IAAAA,OAAO,CAACD,KAAR,CAAcI,KAAd,IAAuBL,YAAY,CAACK,KAAD,EAAQD,KAAR,CAAnC;AACD;AACF;;AAED,SAASI,IAAT,CAAeN,OAAf,EAAwBO,UAAxB,EAAoC;AAClC,OAAK,IAAIC,CAAT,IAAcD,UAAd,EAA0B;AACxB,QAAIA,UAAU,CAACE,cAAX,CAA0BD,CAA1B,CAAJ,EAAkC;AAChCT,MAAAA,KAAK,CAACC,OAAD,EAAUQ,CAAV,EAAaD,UAAU,CAACC,CAAD,CAAvB,CAAL;AACD;AACF;AACF;;AAED,SAASJ,MAAT,CAAiBM,OAAjB,EAA0B;AACxB,MAAIP,KAAK,GAAGP,WAAW,CAACc,OAAD,CAAvB;AACA,MAAIC,MAAM,GAAGjB,MAAM,CAACS,KAAD,CAAnB;AACAN,EAAAA,KAAK,CAACM,KAAD,CAAL,GAAeN,KAAK,CAACa,OAAD,CAAL,GAAiBb,KAAK,CAACc,MAAD,CAAL,GAAgBA,MAAhD;AACA,SAAOA,MAAP;AACD;;AAED,SAASC,GAAT,GAAgB;AACd,MAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,QAAI,OAAOD,SAAS,CAAC,CAAD,CAAhB,KAAwB,QAA5B,EAAsC;AACpCA,MAAAA,SAAS,CAAC,CAAD,CAAT,CAAad,KAAb,CAAmBgB,OAAnB,GAA6BF,SAAS,CAAC,CAAD,CAAtC;AACD,KAFD,MAEO;AACLP,MAAAA,IAAI,CAACO,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,CAAJ;AACD;AACF,GAND,MAMO;AACLd,IAAAA,KAAK,CAACc,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,EAA6BA,SAAS,CAAC,CAAD,CAAtC,CAAL;AACD;AACF;;AAEDG,MAAM,CAACC,OAAP,GAAiBL,GAAjB;AACAI,MAAM,CAACC,OAAP,CAAeL,GAAf,GAAqBA,GAArB;;AAEAI,MAAM,CAACC,OAAP,CAAeC,GAAf,GAAqB,UAAUlB,OAAV,EAAmBO,UAAnB,EAA+B;AAClD,MAAIY,KAAK,CAACC,OAAN,CAAcb,UAAd,CAAJ,EAA+B;AAC7B,WAAOA,UAAU,CAACc,MAAX,CAAkB,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AAC5CD,MAAAA,GAAG,CAACC,IAAD,CAAH,GAAYxB,KAAK,CAACC,OAAD,EAAUuB,IAAI,IAAI,EAAlB,CAAjB;AACA,aAAOD,GAAP;AACD,KAHM,EAGJ,EAHI,CAAP;AAID,GALD,MAKO;AACL,WAAOvB,KAAK,CAACC,OAAD,EAAUO,UAAU,IAAI,EAAxB,CAAZ;AACD;AACF,CATD","sourcesContent":["var prefix = require('prefix-style')\nvar toCamelCase = require('to-camel-case')\nvar cache = { 'float': 'cssFloat' }\nvar addPxToStyle = require('add-px-to-style')\n\nfunction style (element, property, value) {\n  var camel = cache[property]\n  if (typeof camel === 'undefined') {\n    camel = detect(property)\n  }\n\n  // may be false if CSS prop is unsupported\n  if (camel) {\n    if (value === undefined) {\n      return element.style[camel]\n    }\n\n    element.style[camel] = addPxToStyle(camel, value)\n  }\n}\n\nfunction each (element, properties) {\n  for (var k in properties) {\n    if (properties.hasOwnProperty(k)) {\n      style(element, k, properties[k])\n    }\n  }\n}\n\nfunction detect (cssProp) {\n  var camel = toCamelCase(cssProp)\n  var result = prefix(camel)\n  cache[camel] = cache[cssProp] = cache[result] = result\n  return result\n}\n\nfunction set () {\n  if (arguments.length === 2) {\n    if (typeof arguments[1] === 'string') {\n      arguments[0].style.cssText = arguments[1]\n    } else {\n      each(arguments[0], arguments[1])\n    }\n  } else {\n    style(arguments[0], arguments[1], arguments[2])\n  }\n}\n\nmodule.exports = set\nmodule.exports.set = set\n\nmodule.exports.get = function (element, properties) {\n  if (Array.isArray(properties)) {\n    return properties.reduce(function (obj, prop) {\n      obj[prop] = style(element, prop || '')\n      return obj\n    }, {})\n  } else {\n    return style(element, properties || '')\n  }\n}\n"]},"metadata":{},"sourceType":"script"}