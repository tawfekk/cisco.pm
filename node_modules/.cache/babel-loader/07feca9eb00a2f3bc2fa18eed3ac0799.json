{"ast":null,"code":"var _jsxFileName = \"/home/tawfek/cisco.pm/src/content/pages/Components/Tabs/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Helmet } from 'react-helmet-async';\nimport PageTitle from 'src/components/PageTitle';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\nimport { TextareaAutosize, Paper, IconButton, FormControlLabel, Checkbox, Dialog, DialogTitle, Alert, Button, Container, Grid, Card, CardHeader, CardContent, Divider } from '@mui/material';\nimport { useState } from 'react';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Footer from 'src/components/Footer';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport Chip from '@mui/material/Chip';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport * as React from 'react';\nimport Modal from '@mui/material/Modal';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Forms() {\n  _s();\n\n  const [currency, setCurrency] = useState('EUR');\n\n  const handleChange = event => {\n    setCurrency(event.target.value);\n  };\n\n  const [value, setValue] = useState(30);\n\n  const handleChange2 = (event, newValue) => {\n    setValue(newValue);\n  };\n}\n\n_s(Forms, \"VDJ735/W0DD7tB9mb3iHM7D3Hmg=\");\n\n_c = Forms;\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = TabPanel;\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nfunction TabsDemo() {\n  _s2();\n\n  const porte = [\"gi0/0\", \"gi0/1\", \"port-channel 1\"];\n  const [value, setValue] = useState(0); //  const handleChange = (event, newValue) => {\n  //    setValue(newValue);\n  //  };\n\n  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n  const [Motd, setMotd] = useState(localStorage.router_initial_motd_input); //  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n  //  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n  //  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n  //  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n  //  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    boxShadow: 24,\n    p: 4\n  };\n  const styles = {\n    input: {\n      \"&:invalid\": {\n        border: \"red solid 2px\"\n      }\n    }\n  };\n  const [formFields, setFormFields] = useState([{\n    porte: []\n  }]); //const [formFields, setFormFields] = useState(localStorage.router_interfaces_array)\n\n  const handleFormChange = (event, index) => {\n    let data = [...formFields]; //  let data = JSON.parse(JSON.stringify(formFields));\n\n    data[index][event.target.name] = event.target.value;\n    setFormFields(data);\n    localStorage.router_interfaces_array = JSON.stringify(data);\n  };\n\n  const submit = e => {\n    e.preventDefault();\n    console.log(formFields);\n  };\n\n  const addFields = () => {\n    let object = {\n      porte: []\n    };\n    setFormFields([...formFields, object]);\n  };\n\n  const removeFields = index => {\n    let data = [...formFields];\n    data.splice(index, 1);\n    setFormFields(data);\n    localStorage.router_interfaces_array = JSON.stringify(data);\n  };\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250\n      }\n    }\n  };\n\n  const Interfaces = () => {\n    var workingvar = \"\";\n\n    for (const element of JSON.parse(localStorage.router_interfaces_array)) {\n      workingvar += \"\\ninterface range \" + element.porte.toString() + \"\\nip address \" + element.ip + \" \" + element.subnet;\n\n      if (element.description != \"\" && element.description != undefined) {\n        workingvar += \"\\ndescription \" + element.description;\n      }\n\n      workingvar += \"\\nexit\";\n    }\n\n    localStorage.router_interfaces_final = workingvar;\n    return workingvar;\n  };\n\n  const Start = () => {\n    var today = new Date();\n    var workingvar = \"\";\n\n    if (true == true) {\n      workingvar += \"clock set \" + today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds() + \" \" + today.getDate() + \" \" + today.toLocaleString('en-us', {\n        month: 'short'\n      }) + \" \" + today.getFullYear();\n    }\n\n    workingvar += \"\\nconfigure terminal\";\n    workingvar += \"\\nset hostname \" + localStorage.router_initial_hostname_input;\n    localStorage.router_initial_final = workingvar;\n    return workingvar;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Router\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageTitleWrapper, {\n      children: /*#__PURE__*/_jsxDEV(PageTitle, {\n        heading: \"Router\" //subHeading=\"Rouer konfiguration.\"\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"stretch\",\n        spacing: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Tabs, {\n              variant: \"scrollable\",\n              scrollButtons: \"auto\",\n              textColor: \"primary\",\n              indicatorColor: \"primary\",\n              value: value,\n              onChange: (event, newValue) => {\n                setValue(newValue);\n\n                if (localStorage.getItem('router_interfaces_array')) {\n                  setFormFields(JSON.parse(localStorage.router_interfaces_array));\n                }\n              },\n              \"aria-label\": \"basic tabs example\",\n              children: [/*#__PURE__*/_jsxDEV(Tab, {\n                label: \"Initial settings\",\n                ...a11yProps(0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                label: \"Interfaces\",\n                ...a11yProps(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                label: \"Item Three\",\n                ...a11yProps(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                label: \"Item Four\",\n                ...a11yProps(3)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              value: value,\n              index: 0,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  title: \"Basale router indstillinger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    component: \"form\",\n                    sx: {\n                      '& .MuiTextField-root': {\n                        m: 1,\n                        width: '25ch'\n                      }\n                    },\n                    noValidate: true,\n                    autoComplete: \"off\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(TextField, {\n                        required: true,\n                        id: \"router.initial.hostname.input\",\n                        label: \"Hostname\",\n                        defaultValue: localStorage.router_initial_hostname_input,\n                        value: Hostname,\n                        placeholder: \"R1\",\n                        onChange: event => {\n                          localStorage.router_initial_hostname_input = event.target.value;\n                          setHostname(event.target.value);\n                        } //inputRef={textFieldRef}\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 267,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                        id: \"router_initial_motd_input\",\n                        label: \"MOTD\",\n                        value: Motd,\n                        defaultValue: localStorage.router_initial_motd_input,\n                        placeholder: \"Authorized access only!\",\n                        onChange: event => {\n                          localStorage.router_initial_motd_input = event.target.value;\n                          setMotd(event.target.value);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 277,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                        id: \"router.initial.dom\\xE6ne.input\",\n                        label: \"Dom\\xE6ne\" //defaultValue=\"R1\"\n                        ,\n                        placeholder: \"domain.internal\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 285,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                        id: \"router.initial.secret.input\",\n                        label: \"Enable secret\" //defaultValue=\"R1\"\n                        ,\n                        placeholder: \"domain.internal\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 291,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                        id: \"router.initial.con0pass.input\",\n                        label: \"Con 0 password\" //defaultValue=\"R1\"\n                        ,\n                        placeholder: \"domain.internal\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 297,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                        id: \"router.initial.vtypass.input\",\n                        label: \"Vty 0-15 password\" //defaultValue=\"R1\"\n                        ,\n                        placeholder: \"domain.internal\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 303,\n                        columnNumber: 23\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: handleOpen,\n                      variant: \"contained\",\n                      sx: {\n                        margin: 1\n                      },\n                      size: \"medium\",\n                      color: \"primary\",\n                      children: \"Vis config\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 311,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outlined\",\n                      color: \"error\",\n                      sx: {\n                        margin: 1\n                      },\n                      size: \"medium\",\n                      onClick: () => {\n                        localStorage.router_initial_motd_input = \"\";\n                        setMotd(\"\");\n                        localStorage.router_initial_hostname_input = \"\";\n                        setHostname(\"\"); //  alert(Hostname)\n                      },\n                      children: \"Ryd felter\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 314,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                      open: open,\n                      onClose: handleClose,\n                      \"aria-labelledby\": \"modal-modal-title\",\n                      \"aria-describedby\": \"modal-modal-description\",\n                      children: /*#__PURE__*/_jsxDEV(Box, {\n                        sx: style,\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          id: \"modal-modal-title\",\n                          variant: \"h4\",\n                          component: \"h2\",\n                          children: \"Konfig genereret\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 329,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          multiline: true,\n                          sx: {\n                            mt: 2\n                          },\n                          inputProps: {\n                            style: {\n                              color: \"#FFC13D\"\n                            }\n                          },\n                          maxRows: Infinity,\n                          rows: 5,\n                          style: {\n                            width: '100%'\n                          },\n                          id: \"modal-modal-description\",\n                          value: Start()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 330,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          onClick: () => {\n                            navigator.clipboard.writeText(localStorage.router_initial_final);\n                          },\n                          variant: \"contained\",\n                          sx: {\n                            right: '20%',\n                            left: '20%',\n                            margin: 2\n                          },\n                          size: \"small\",\n                          color: \"secondary\",\n                          children: \"Kopier til udklipsholder\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 340,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 328,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              value: value,\n              index: 1,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                sx: {\n                  width: '100%'\n                },\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  title: \"Interfaces\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [formFields.map((form, index) => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(Box // sx={{ width: '100%' }}\n                      , {\n                        sx: {\n                          '& .MuiTextField-root': {\n                            m: 1,\n                            width: '25ch'\n                          }\n                        },\n                        autoComplete: \"off\",\n                        children: [/*#__PURE__*/_jsxDEV(TextField, {\n                          name: \"ip\",\n                          label: \"IP\",\n                          placeholder: \"192.168.1.1\",\n                          onChange: event => handleFormChange(event, index),\n                          value: form.ip\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 362,\n                          columnNumber: 63\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          name: \"subnet\",\n                          label: \"Subnet\",\n                          placeholder: \"255.255.255.0\",\n                          onChange: event => handleFormChange(event, index),\n                          value: form.subnet\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 369,\n                          columnNumber: 63\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          name: \"description\",\n                          label: \"Description\",\n                          placeholder: \"portbeskrivelse\",\n                          onChange: event => handleFormChange(event, index),\n                          value: form.description\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 376,\n                          columnNumber: 63\n                        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                          sx: {\n                            m: 1,\n                            width: 220\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                            id: \"demo-multiple-chip-label\",\n                            children: \"Porte\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 384,\n                            columnNumber: 97\n                          }, this), /*#__PURE__*/_jsxDEV(Select, {\n                            name: \"porte\",\n                            labelId: \"demo-multiple-chip-label\",\n                            id: \"demo-multiple-chip\",\n                            multiple: true,\n                            value: form.porte,\n                            onChange: event => handleFormChange(event, index),\n                            input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                              id: \"select-multiple-chip\",\n                              label: \"Chip\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 397,\n                              columnNumber: 101\n                            }, this),\n                            renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n                              sx: {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                gap: 0.5\n                              },\n                              children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                                label: value\n                              }, value, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 411,\n                                columnNumber: 105\n                              }, this))\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 403,\n                              columnNumber: 101\n                            }, this),\n                            MenuProps: MenuProps,\n                            children: porte.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n                              value: name,\n                              children: name\n                            }, name, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 418,\n                              columnNumber: 101\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 387,\n                            columnNumber: 97\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 383,\n                          columnNumber: 63\n                        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                            sx: {\n                              margin: 1.7,\n                              left: '10%'\n                            },\n                            color: \"warning\",\n                            name: \"shutdown\",\n                            checked: form.shutdown,\n                            onChange: event => handleFormChange(event, index)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 424,\n                            columnNumber: 122\n                          }, this),\n                          label: \"Shutdown\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 424,\n                          columnNumber: 95\n                        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                            color: \"secondary\",\n                            onClick: () => removeFields(index)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 433,\n                            columnNumber: 99\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 432,\n                          columnNumber: 99\n                        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                          sx: {\n                            m: 2\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 435,\n                          columnNumber: 63\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 357,\n                        columnNumber: 63\n                      }, this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 356,\n                      columnNumber: 61\n                    }, this);\n                  }), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    sx: {\n                      margin: 1\n                    },\n                    size: \"medium\",\n                    color: \"primary\",\n                    onClick: addFields,\n                    children: \"Tilf\\xF8j interface\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 440,\n                    columnNumber: 55\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    onClick: handleOpen,\n                    children: \"Vis config\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 441,\n                    columnNumber: 55\n                  }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                    open: open,\n                    onClose: handleClose,\n                    \"aria-labelledby\": \"modal-modal-title\",\n                    \"aria-describedby\": \"modal-modal-description\",\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: style,\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        id: \"modal-modal-title\",\n                        variant: \"h4\",\n                        component: \"h2\",\n                        children: \"Konfig genereret\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 449,\n                        columnNumber: 59\n                      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                        multiline: true,\n                        sx: {\n                          mt: 2\n                        },\n                        inputProps: {\n                          style: {\n                            color: \"#FFC13D\"\n                          }\n                        },\n                        maxRows: Infinity,\n                        rows: 5,\n                        style: {\n                          width: '100%'\n                        },\n                        id: \"modal-modal-description\",\n                        value: \"conf terminal\" + Interfaces() + \"\\nend\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 450,\n                        columnNumber: 63\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        onClick: () => {\n                          navigator.clipboard.writeText(localStorage.router_initial_final);\n                        },\n                        variant: \"contained\",\n                        sx: {\n                          right: '20%',\n                          left: '20%',\n                          margin: 2\n                        },\n                        size: \"small\",\n                        color: \"secondary\",\n                        children: \"Kopier til udklipsholder\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 460,\n                        columnNumber: 59\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 448,\n                      columnNumber: 59\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 442,\n                    columnNumber: 55\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              value: value,\n              index: 2,\n              children: \"Item Three\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              value: value,\n              index: 3,\n              children: \"Item four\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(TabsDemo, \"ylVaDC4DUdzclfUloMZIU5LE520=\");\n\n_c3 = TabsDemo;\nexport default TabsDemo;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Forms\");\n$RefreshReg$(_c2, \"TabPanel\");\n$RefreshReg$(_c3, \"TabsDemo\");","map":{"version":3,"sources":["/home/tawfek/cisco.pm/src/content/pages/Components/Tabs/index.js"],"names":["Helmet","PageTitle","PageTitleWrapper","TextareaAutosize","Paper","IconButton","FormControlLabel","Checkbox","Dialog","DialogTitle","Alert","Button","Container","Grid","Card","CardHeader","CardContent","Divider","useState","Tabs","Tab","Typography","Box","Footer","Input","InputLabel","MenuItem","FormControl","Select","SelectChangeEvent","Chip","OutlinedInput","React","Modal","DeleteIcon","TextField","Forms","currency","setCurrency","handleChange","event","target","value","setValue","handleChange2","newValue","TabPanel","props","children","index","other","p","a11yProps","id","TabsDemo","porte","Hostname","setHostname","localStorage","router_initial_hostname_input","Motd","setMotd","router_initial_motd_input","open","setOpen","handleOpen","handleClose","style","position","top","left","transform","width","bgcolor","boxShadow","styles","input","border","formFields","setFormFields","handleFormChange","data","name","router_interfaces_array","JSON","stringify","submit","e","preventDefault","console","log","addFields","object","removeFields","splice","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","maxHeight","Interfaces","workingvar","element","parse","toString","ip","subnet","description","undefined","router_interfaces_final","Start","today","Date","getHours","getMinutes","getSeconds","getDate","toLocaleString","month","getFullYear","router_initial_final","getItem","m","margin","mt","color","Infinity","navigator","clipboard","writeText","right","map","form","selected","display","flexWrap","gap","shutdown"],"mappings":"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","sourcesContent":["import { Helmet } from 'react-helmet-async';\nimport PageTitle from 'src/components/PageTitle';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\nimport { TextareaAutosize, Paper, IconButton, FormControlLabel, Checkbox, Dialog, DialogTitle, Alert, Button, Container, Grid, Card, CardHeader, CardContent, Divider } from '@mui/material';\nimport { useState } from 'react';\n\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Footer from 'src/components/Footer';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport Chip from '@mui/material/Chip';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport * as React from 'react';\nimport Modal from '@mui/material/Modal';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\n\nimport TextField from '@mui/material/TextField';\nfunction Forms() {\n\n  const [currency, setCurrency] = useState('EUR');\n\n  const handleChange = (event) => {\n    setCurrency(event.target.value);\n  };\n\n  const [value, setValue] = useState(30);\n\n  const handleChange2 = (event, newValue) => {\n    setValue(newValue);\n  };\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\n\n\nfunction TabsDemo() {\n\n  const porte = [\n    \"gi0/0\",\n    \"gi0/1\",\n    \"port-channel 1\"\n  ];\n\n\n\n\n  const [value, setValue] = useState(0);\n\n//  const handleChange = (event, newValue) => {\n//    setValue(newValue);\n//  };\n\n  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n  const [Motd, setMotd] = useState(localStorage.router_initial_motd_input);\n//  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n//  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n//  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n//  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n//  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n\nconst [open, setOpen] = React.useState(false);\nconst handleOpen = () => setOpen(true);\nconst handleClose = () => setOpen(false);\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  boxShadow: 24,\n  p: 4,\n};\nconst styles = {\n  input: {\n    \"&:invalid\": {\n      border: \"red solid 2px\"\n    }\n  }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst [formFields, setFormFields] = useState([{porte: []}])\n//const [formFields, setFormFields] = useState(localStorage.router_interfaces_array)\n\nconst handleFormChange = (event, index) => {\n  let data = [...formFields]\n//  let data = JSON.parse(JSON.stringify(formFields));\n  data[index][event.target.name] = event.target.value;\n  setFormFields(data);\n  localStorage.router_interfaces_array = JSON.stringify(data)\n}\n\nconst submit = (e) => {\n  e.preventDefault();\n  console.log(formFields)\n}\n\nconst addFields = () => {\n  let object = {\n\n    porte: []\n  }\n\n  setFormFields([...formFields, object])\n}\n\nconst removeFields = (index) => {\n  let data = [...formFields];\n  data.splice(index, 1)\n  setFormFields(data)\n  localStorage.router_interfaces_array = JSON.stringify(data)\n}\n\n\n\n\n\n\n\n\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n\n\n\n\n\n\n\n\n\n\nconst Interfaces = () => {\n  var workingvar = \"\"\n  for (const element of JSON.parse(localStorage.router_interfaces_array)){\n    workingvar += \"\\ninterface range \"+element.porte.toString()+\"\\nip address \"+element.ip +\" \"+element.subnet\n  \t\tif(element.description != \"\" && element.description != undefined) {workingvar += \"\\ndescription \"+element.description}\n  \t\tworkingvar += \"\\nexit\"\n  }\n    localStorage.router_interfaces_final = workingvar ; return workingvar\n}\n\n\nconst Start = () => {\n\t\tvar today = new Date()\n\t\tvar workingvar = \"\"\n    if (true == true) {workingvar += \"clock set \" + today.getHours()+\":\"+today.getMinutes()+\":\"+today.getSeconds()+\" \"+today.getDate()+\" \"+today.toLocaleString('en-us', { month: 'short' })+\" \"+today.getFullYear()}\n    workingvar +=  \"\\nconfigure terminal\"\n    workingvar += \"\\nset hostname \" + localStorage.router_initial_hostname_input\n    localStorage.router_initial_final = workingvar; return workingvar\n  }\n\n\n  return (\n    <>\n      <Helmet>\n        <title>Router</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <PageTitle\n          heading=\"Router\"\n //subHeading=\"Rouer konfiguration.\"\n          />\n      </PageTitleWrapper>\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12}>\n                <Box sx={{ width: '100%' }}>\n                  <Tabs variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                    textColor=\"primary\"\n                    indicatorColor=\"primary\" value={value} onChange={(event, newValue) => {setValue(newValue); if (localStorage.getItem('router_interfaces_array')) {setFormFields(JSON.parse(localStorage.router_interfaces_array))} }} aria-label=\"basic tabs example\">\n                    <Tab label=\"Initial settings\" {...a11yProps(0)} />\n                    <Tab label=\"Interfaces\" {...a11yProps(1)} />\n                    <Tab label=\"Item Three\" {...a11yProps(2)} />\n                    <Tab label=\"Item Four\" {...a11yProps(3)} />\n                  </Tabs>\n                  <TabPanel value={value} index={0}>\n                    <Card>\n                    <CardHeader title=\"Basale router indstillinger\" />\n                    <Divider />\n                    <CardContent>\n                  <Box\n                    component=\"form\"\n                    sx={{\n                    '& .MuiTextField-root': { m: 1, width: '25ch' },\n                    }}\n                    noValidate\n                    autoComplete=\"off\"\n                  >\n                    <div>\n                      <TextField\n                        required\n                        id=\"router.initial.hostname.input\"\n                        label=\"Hostname\"\n                        defaultValue={localStorage.router_initial_hostname_input}\n                        value = {Hostname}\n                        placeholder=\"R1\"\n                        onChange={(event) => {localStorage.router_initial_hostname_input = event.target.value; setHostname(event.target.value)}}\n                        //inputRef={textFieldRef}\n                      />\n                      <TextField\n                        id=\"router_initial_motd_input\"\n                        label=\"MOTD\"\n                        value = {Motd}\n                        defaultValue={localStorage.router_initial_motd_input}\n                        placeholder=\"Authorized access only!\"\n                        onChange={(event) => {localStorage.router_initial_motd_input = event.target.value; setMotd(event.target.value)}}\n                      />\n                      <TextField\n                        id=\"router.initial.domæne.input\"\n                        label=\"Domæne\"\n                        //defaultValue=\"R1\"\n                        placeholder=\"domain.internal\"\n                      />\n                      <TextField\n                        id=\"router.initial.secret.input\"\n                        label=\"Enable secret\"\n                        //defaultValue=\"R1\"\n                        placeholder=\"domain.internal\"\n                      />\n                      <TextField\n                        id=\"router.initial.con0pass.input\"\n                        label=\"Con 0 password\"\n                        //defaultValue=\"R1\"\n                        placeholder=\"domain.internal\"\n                      />\n                      <TextField\n                        id=\"router.initial.vtypass.input\"\n                        label=\"Vty 0-15 password\"\n                        //defaultValue=\"R1\"\n                        placeholder=\"domain.internal\"\n                      />\n                    </div>\n\n                    <Button onClick={handleOpen} variant=\"contained\" sx={{ margin: 1 }} size=\"medium\" color=\"primary\">\n                      Vis config\n                    </Button>\n                    <Button variant=\"outlined\" color=\"error\" sx={{ margin: 1 }} size=\"medium\" onClick={() =>{\n                    localStorage.router_initial_motd_input = \"\" ; setMotd(\"\")\n                    localStorage.router_initial_hostname_input = \"\" ; setHostname(\"\")\n                  //  alert(Hostname)\n                  }}\n                    >\n                      Ryd felter\n                    </Button>\n                      <Modal\n                          open={open}\n                          onClose={handleClose}\n                          aria-labelledby=\"modal-modal-title\"\n                          aria-describedby=\"modal-modal-description\"\n                          >\n                          <Box sx={style}>\n                          <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">Konfig genereret</Typography>\n                              <TextField\n                                    multiline\n                                    sx={{  mt: 2 }}\n                                    inputProps={{ style: { color: \"#FFC13D\" } }}\n                                    maxRows={Infinity}\n                                    rows={5}\n                                    style={{width: '100%'}}\n                                    id=\"modal-modal-description\"\n                                    value= {Start()}>\n                              </TextField>\n                          <Button onClick={() => {navigator.clipboard.writeText(localStorage.router_initial_final)}} variant=\"contained\" sx={{right: '20%',left: '20%', margin: 2 }} size=\"small\" color=\"secondary\">\n                            Kopier til udklipsholder\n                          </Button>\n                          </Box>\n                      </Modal>\n                  </Box>\n                  </CardContent>\n                  </Card>\n                  </TabPanel>\n                  <TabPanel value={value} index={1}>\n                                        <Card sx={{ width: '100%' }}>\n                                        <CardHeader title=\"Interfaces\" />\n                                        <Divider />\n                                        <CardContent>\n                                                        {formFields.map((form, index) => {\n                                                          return (\n                                                            <div key={index}>\n                                                              <Box// sx={{ width: '100%' }}\n                                                              sx={{\n                                                              '& .MuiTextField-root': { m: 1, width: '25ch' },\n                                                              }}\n                                                              autoComplete=\"off\">\n                                                              <TextField\n                                                                name='ip'\n                                                                label=\"IP\"\n                                                                placeholder=\"192.168.1.1\"\n                                                                onChange={event => handleFormChange(event, index)}\n                                                                value={form.ip}\n                                                              />\n                                                              <TextField\n                                                                name='subnet'\n                                                                label=\"Subnet\"\n                                                                placeholder='255.255.255.0'\n                                                                onChange={event => handleFormChange(event, index)}\n                                                                value={form.subnet}\n                                                              />\n                                                              <TextField\n                                                                name='description'\n                                                                label=\"Description\"\n                                                                placeholder='portbeskrivelse'\n                                                                onChange={event => handleFormChange(event, index)}\n                                                                value={form.description}\n                                                              />\n                                                              <FormControl sx={{ m: 1, width: 220 }}>\n                                                                                                <InputLabel id=\"demo-multiple-chip-label\">\n                                                                                                  Porte\n                                                                                                </InputLabel>\n                                                                                                <Select\n                                                                                                  name='porte'\n                                                                                                  labelId=\"demo-multiple-chip-label\"\n                                                                                                  id=\"demo-multiple-chip\"\n                                                                                                  multiple\n                                                                                                  value={form.porte}\n                                                                                                  onChange={(event) =>\n                                                                                                    handleFormChange(event, index)\n                                                                                                  }\n                                                                                                  input={\n                                                                                                    <OutlinedInput\n                                                                                                      id=\"select-multiple-chip\"\n                                                                                                      label=\"Chip\"\n                                                                                                    />\n                                                                                                  }\n                                                                                                  renderValue={(selected) => (\n                                                                                                    <Box\n                                                                                                      sx={{\n                                                                                                        display: 'flex',\n                                                                                                        flexWrap: 'wrap',\n                                                                                                        gap: 0.5\n                                                                                                      }}\n                                                                                                    >\n                                                                                                      {selected.map((value) => (\n                                                                                                        <Chip key={value} label={value} />\n                                                                                                      ))}\n                                                                                                    </Box>\n                                                                                                  )}\n                                                                                                  MenuProps={MenuProps}\n                                                                                                >\n                                                                                                  {porte.map((name) => (\n                                                                                                    <MenuItem key={name} value={name}>\n                                                                                                      {name}\n                                                                                                    </MenuItem>\n                                                                                                  ))}\n                                                                                                </Select>\n                                                                                              </FormControl>\n                                                                                              <FormControlLabel control={<Checkbox sx={{ margin: 1.7, left: '10%'}}\n                                                                                                  color=\"warning\"\n                                                                                                  name='shutdown'\n                                                                                                  checked={form.shutdown}\n                                                                                                  onChange={(event) =>\n                                                                                                    handleFormChange(event, index)\n                                                                                                  }\n                                                                                                />} label=\"Shutdown\" />\n                                                                                                  <IconButton>\n                                                                                                  <DeleteIcon color=\"secondary\" onClick={() => removeFields(index)} />\n                                                                                                  </IconButton>\n                                                              <Divider sx={{m: 2}} />\n                                                              </Box>\n                                                            </div>\n                                                          )\n                                                        })}\n                                                      <Button variant=\"outlined\" sx={{ margin: 1 }} size=\"medium\" color=\"primary\" onClick={addFields}>Tilføj interface</Button>\n                                                      <Button variant=\"contained\" onClick={handleOpen}>Vis config</Button>\n                                                      <Modal\n                                                          open={open}\n                                                          onClose={handleClose}\n                                                          aria-labelledby=\"modal-modal-title\"\n                                                          aria-describedby=\"modal-modal-description\"\n                                                          >\n                                                          <Box sx={style}>\n                                                          <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">Konfig genereret</Typography>\n                                                              <TextField\n                                                                    multiline\n                                                                    sx={{  mt: 2 }}\n                                                                    inputProps={{ style: { color: \"#FFC13D\" } }}\n                                                                    maxRows={Infinity}\n                                                                    rows={5}\n                                                                    style={{width: '100%'}}\n                                                                    id=\"modal-modal-description\"\n                                                                    value= {\"conf terminal\"+Interfaces()+\"\\nend\"}>\n                                                              </TextField>\n                                                          <Button onClick={() => {navigator.clipboard.writeText(localStorage.router_initial_final)}} variant=\"contained\" sx={{right: '20%',left: '20%', margin: 2 }} size=\"small\" color=\"secondary\">\n                                                            Kopier til udklipsholder\n                                                          </Button>\n                                                          </Box>\n                                                      </Modal>\n                                                      </CardContent>\n                                                  </Card>\n                  </TabPanel>\n                  <TabPanel value={value} index={2}>\n                    Item Three\n                  </TabPanel>\n                  <TabPanel value={value} index={3}>\n                    Item four\n                  </TabPanel>\n                </Box>\n\n\n          </Grid>\n        </Grid>\n      </Container>\n      <Footer />\n    </>\n  );\n}\n\nexport default TabsDemo;\n"]},"metadata":{},"sourceType":"module"}