{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"name\"],\n      _excluded2 = [\"children\", \"className\", \"clone\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes, getDisplayName } from '@mui/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport makeStyles from '../makeStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction omit(input, fields) {\n  const output = {};\n  Object.keys(input).forEach(prop => {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n  return output;\n} // styled-components's API removes the mapping between components and styles.\n// Using components as a low-level styling construct can be simpler.\n\n\nexport default function styled(Component) {\n  const componentCreator = function (style) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    const {\n      name\n    } = options,\n          stylesOptions = _objectWithoutPropertiesLoose(options, _excluded);\n\n    if (process.env.NODE_ENV !== 'production' && Component === undefined) {\n      throw new Error(['You are calling styled(Component)(style) with an undefined component.', 'You may have forgotten to import it.'].join('\\n'));\n    }\n\n    let classNamePrefix = name;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!name) {\n        // Provide a better DX outside production.\n        const displayName = getDisplayName(Component);\n\n        if (displayName !== undefined) {\n          classNamePrefix = displayName;\n        }\n      }\n    }\n\n    const stylesOrCreator = typeof style === 'function' ? theme => ({\n      root: props => style(_extends({\n        theme\n      }, props))\n    }) : {\n      root: style\n    };\n    const useStyles = makeStyles(stylesOrCreator, _extends({\n      Component,\n      name: name || Component.displayName,\n      classNamePrefix\n    }, stylesOptions));\n    let filterProps;\n    let propTypes = {};\n\n    if (style.filterProps) {\n      filterProps = style.filterProps;\n      delete style.filterProps;\n    }\n    /* eslint-disable react/forbid-foreign-prop-types */\n\n\n    if (style.propTypes) {\n      propTypes = style.propTypes;\n      delete style.propTypes;\n    }\n    /* eslint-enable react/forbid-foreign-prop-types */\n\n\n    const StyledComponent = /*#__PURE__*/React.forwardRef(function StyledComponent(props, ref) {\n      const {\n        children,\n        className: classNameProp,\n        clone,\n        component: ComponentProp\n      } = props,\n            other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n      const classes = useStyles(props);\n      const className = clsx(classes.root, classNameProp);\n      let spread = other;\n\n      if (filterProps) {\n        spread = omit(spread, filterProps);\n      }\n\n      if (clone) {\n        return /*#__PURE__*/React.cloneElement(children, _extends({\n          className: clsx(children.props.className, className)\n        }, spread));\n      }\n\n      if (typeof children === 'function') {\n        return children(_extends({\n          className\n        }, spread));\n      }\n\n      const FinalComponent = ComponentProp || Component;\n      return /*#__PURE__*/_jsx(FinalComponent, _extends({\n        ref: ref,\n        className: className\n      }, spread, {\n        children: children\n      }));\n    });\n    process.env.NODE_ENV !== \"production\" ? StyledComponent.propTypes = _extends({\n      /**\n       * A render function or node.\n       */\n      children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n\n      /**\n       * @ignore\n       */\n      className: PropTypes.string,\n\n      /**\n       * If `true`, the component will recycle it's children HTML element.\n       * It's using `React.cloneElement` internally.\n       *\n       * This prop will be deprecated and removed in v5\n       */\n      clone: chainPropTypes(PropTypes.bool, props => {\n        if (props.clone && props.component) {\n          return new Error('You can not use the clone and component prop at the same time.');\n        }\n\n        return null;\n      }),\n\n      /**\n       * The component used for the root node.\n       * Either a string to use a HTML element or a component.\n       */\n      component: PropTypes\n      /* @typescript-to-proptypes-ignore */\n      .elementType\n    }, propTypes) : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      StyledComponent.displayName = `Styled(${classNamePrefix})`;\n    }\n\n    hoistNonReactStatics(StyledComponent, Component);\n    return StyledComponent;\n  };\n\n  return componentCreator;\n}","map":{"version":3,"sources":["/home/tawfek/code/node_modules/@mui/styles/styled/styled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","React","clsx","PropTypes","chainPropTypes","getDisplayName","hoistNonReactStatics","makeStyles","jsx","_jsx","omit","input","fields","output","Object","keys","forEach","prop","indexOf","styled","Component","componentCreator","style","options","name","stylesOptions","process","env","NODE_ENV","undefined","Error","join","classNamePrefix","displayName","stylesOrCreator","theme","root","props","useStyles","filterProps","propTypes","StyledComponent","forwardRef","ref","children","className","classNameProp","clone","component","ComponentProp","other","classes","spread","cloneElement","FinalComponent","oneOfType","node","func","string","bool","elementType"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"name\"],\n      _excluded2 = [\"children\", \"className\", \"clone\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes, getDisplayName } from '@mui/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport makeStyles from '../makeStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction omit(input, fields) {\n  const output = {};\n  Object.keys(input).forEach(prop => {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n  return output;\n} // styled-components's API removes the mapping between components and styles.\n// Using components as a low-level styling construct can be simpler.\n\n\nexport default function styled(Component) {\n  const componentCreator = (style, options = {}) => {\n    const {\n      name\n    } = options,\n          stylesOptions = _objectWithoutPropertiesLoose(options, _excluded);\n\n    if (process.env.NODE_ENV !== 'production' && Component === undefined) {\n      throw new Error(['You are calling styled(Component)(style) with an undefined component.', 'You may have forgotten to import it.'].join('\\n'));\n    }\n\n    let classNamePrefix = name;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!name) {\n        // Provide a better DX outside production.\n        const displayName = getDisplayName(Component);\n\n        if (displayName !== undefined) {\n          classNamePrefix = displayName;\n        }\n      }\n    }\n\n    const stylesOrCreator = typeof style === 'function' ? theme => ({\n      root: props => style(_extends({\n        theme\n      }, props))\n    }) : {\n      root: style\n    };\n    const useStyles = makeStyles(stylesOrCreator, _extends({\n      Component,\n      name: name || Component.displayName,\n      classNamePrefix\n    }, stylesOptions));\n    let filterProps;\n    let propTypes = {};\n\n    if (style.filterProps) {\n      filterProps = style.filterProps;\n      delete style.filterProps;\n    }\n    /* eslint-disable react/forbid-foreign-prop-types */\n\n\n    if (style.propTypes) {\n      propTypes = style.propTypes;\n      delete style.propTypes;\n    }\n    /* eslint-enable react/forbid-foreign-prop-types */\n\n\n    const StyledComponent = /*#__PURE__*/React.forwardRef(function StyledComponent(props, ref) {\n      const {\n        children,\n        className: classNameProp,\n        clone,\n        component: ComponentProp\n      } = props,\n            other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n      const classes = useStyles(props);\n      const className = clsx(classes.root, classNameProp);\n      let spread = other;\n\n      if (filterProps) {\n        spread = omit(spread, filterProps);\n      }\n\n      if (clone) {\n        return /*#__PURE__*/React.cloneElement(children, _extends({\n          className: clsx(children.props.className, className)\n        }, spread));\n      }\n\n      if (typeof children === 'function') {\n        return children(_extends({\n          className\n        }, spread));\n      }\n\n      const FinalComponent = ComponentProp || Component;\n      return /*#__PURE__*/_jsx(FinalComponent, _extends({\n        ref: ref,\n        className: className\n      }, spread, {\n        children: children\n      }));\n    });\n    process.env.NODE_ENV !== \"production\" ? StyledComponent.propTypes = _extends({\n      /**\n       * A render function or node.\n       */\n      children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n\n      /**\n       * @ignore\n       */\n      className: PropTypes.string,\n\n      /**\n       * If `true`, the component will recycle it's children HTML element.\n       * It's using `React.cloneElement` internally.\n       *\n       * This prop will be deprecated and removed in v5\n       */\n      clone: chainPropTypes(PropTypes.bool, props => {\n        if (props.clone && props.component) {\n          return new Error('You can not use the clone and component prop at the same time.');\n        }\n\n        return null;\n      }),\n\n      /**\n       * The component used for the root node.\n       * Either a string to use a HTML element or a component.\n       */\n      component: PropTypes\n      /* @typescript-to-proptypes-ignore */\n      .elementType\n    }, propTypes) : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      StyledComponent.displayName = `Styled(${classNamePrefix})`;\n    }\n\n    hoistNonReactStatics(StyledComponent, Component);\n    return StyledComponent;\n  };\n\n  return componentCreator;\n}"]},"metadata":{},"sourceType":"module"}