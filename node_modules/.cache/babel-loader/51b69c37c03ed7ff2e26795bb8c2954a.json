{"ast":null,"code":"var _jsxFileName = \"/home/tawfek/code/src/content/dashboards/Tasks/TasksAnalytics.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { Button, Card, Box, CardHeader, Menu, MenuItem, Typography, CardContent } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport ExpandMoreTwoToneIcon from '@mui/icons-material/ExpandMoreTwoTone';\nimport TasksAnalyticsChart from './TasksAnalyticsChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TasksAnalyticsChartWrapper = styled(TasksAnalyticsChart)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return `\n        height: 200px;\n`;\n});\nconst DotPrimaryLight = styled('span')(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return `\n    border-radius: 22px;\n    background: ${theme.colors.primary.lighter};\n    width: ${theme.spacing(1.5)};\n    height: ${theme.spacing(1.5)};\n    display: inline-block;\n    margin-right: ${theme.spacing(0.5)};\n`;\n});\nconst DotPrimary = styled('span')(_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return `\n    border-radius: 22px;\n    background: ${theme.colors.primary.main};\n    width: ${theme.spacing(1.5)};\n    height: ${theme.spacing(1.5)};\n    display: inline-block;\n    margin-right: ${theme.spacing(0.5)};\n`;\n});\n\nfunction TasksAnalytics() {\n  _s();\n\n  const transactions = {\n    income: [28, 47, 41, 34, 69, 91, 49, 82, 52, 72, 32, 99],\n    expenses: [38, 85, 64, 40, 97, 82, 58, 42, 55, 46, 57, 70]\n  };\n  const generic = {\n    month: {\n      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n    }\n  };\n  const periods = [{\n    value: 'today',\n    text: 'Today'\n  }, {\n    value: 'yesterday',\n    text: 'Yesterday'\n  }, {\n    value: 'last_month',\n    text: 'Last month'\n  }, {\n    value: 'last_year',\n    text: 'Last year'\n  }];\n  const actionRef1 = useRef(null);\n  const [openPeriod, setOpenMenuPeriod] = useState(false);\n  const [period, setPeriod] = useState(periods[3].text);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      height: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      action: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          variant: \"contained\",\n          color: \"secondary\",\n          ref: actionRef1,\n          onClick: () => setOpenMenuPeriod(true),\n          endIcon: /*#__PURE__*/_jsxDEV(ExpandMoreTwoToneIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 24\n          }, this),\n          children: period\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          anchorEl: actionRef1.current,\n          onClose: () => setOpenMenuPeriod(false),\n          open: openPeriod,\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'right'\n          },\n          transformOrigin: {\n            vertical: 'top',\n            horizontal: 'right'\n          },\n          children: periods.map(_period => /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => {\n              setPeriod(_period.text);\n              setOpenMenuPeriod(false);\n            },\n            children: _period.text\n          }, _period.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      title: \"Tasks Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        pt: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        pl: 1,\n        pb: 3,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mr: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(DotPrimary, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), \"tasks created\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          sx: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(DotPrimaryLight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), \"tasks completed\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        height: 200,\n        children: /*#__PURE__*/_jsxDEV(TasksAnalyticsChartWrapper, {\n          data: transactions,\n          labels: generic.month.labels\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TasksAnalytics, \"Api4XYk15e0f9Tts1LPy5lhIahg=\");\n\n_c = TasksAnalytics;\nexport default TasksAnalytics;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksAnalytics\");","map":{"version":3,"sources":["/home/tawfek/code/src/content/dashboards/Tasks/TasksAnalytics.js"],"names":["useRef","useState","Button","Card","Box","CardHeader","Menu","MenuItem","Typography","CardContent","styled","ExpandMoreTwoToneIcon","TasksAnalyticsChart","TasksAnalyticsChartWrapper","theme","DotPrimaryLight","colors","primary","lighter","spacing","DotPrimary","main","TasksAnalytics","transactions","income","expenses","generic","month","labels","periods","value","text","actionRef1","openPeriod","setOpenMenuPeriod","period","setPeriod","height","current","vertical","horizontal","map","_period","pt","display","alignItems","mr"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,GAHF,EAIEC,UAJF,EAKEC,IALF,EAMEC,QANF,EAOEC,UAPF,EAQEC,WARF,QASO,eATP;AAWA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,qBAAP,MAAkC,uCAAlC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;;;AAEA,MAAMC,0BAA0B,GAAGH,MAAM,CAACE,mBAAD,CAAN,CACjC;AAAA,MAAC;AAAEE,IAAAA;AAAF,GAAD;AAAA,SAAgB;AAClB;AACA,CAFE;AAAA,CADiC,CAAnC;AAMA,MAAMC,eAAe,GAAGL,MAAM,CAAC,MAAD,CAAN,CACtB;AAAA,MAAC;AAAEI,IAAAA;AAAF,GAAD;AAAA,SAAgB;AAClB;AACA,kBAAkBA,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqBC,OAAQ;AAC/C,aAAaJ,KAAK,CAACK,OAAN,CAAc,GAAd,CAAmB;AAChC,cAAcL,KAAK,CAACK,OAAN,CAAc,GAAd,CAAmB;AACjC;AACA,oBAAoBL,KAAK,CAACK,OAAN,CAAc,GAAd,CAAmB;AACvC,CAPE;AAAA,CADsB,CAAxB;AAWA,MAAMC,UAAU,GAAGV,MAAM,CAAC,MAAD,CAAN,CACjB;AAAA,MAAC;AAAEI,IAAAA;AAAF,GAAD;AAAA,SAAgB;AAClB;AACA,kBAAkBA,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqBI,IAAK;AAC5C,aAAaP,KAAK,CAACK,OAAN,CAAc,GAAd,CAAmB;AAChC,cAAcL,KAAK,CAACK,OAAN,CAAc,GAAd,CAAmB;AACjC;AACA,oBAAoBL,KAAK,CAACK,OAAN,CAAc,GAAd,CAAmB;AACvC,CAPE;AAAA,CADiB,CAAnB;;AAWA,SAASG,cAAT,GAA0B;AAAA;;AAGxB,QAAMC,YAAY,GAAG;AACnBC,IAAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,CADW;AAEnBC,IAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C;AAFS,GAArB;AAKA,QAAMC,OAAO,GAAG;AACdC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE,CACN,KADM,EAEN,KAFM,EAGN,KAHM,EAIN,KAJM,EAKN,KALM,EAMN,KANM,EAOd,KAPc,EAQd,KARc,EASN,KATM,EAUN,KAVM,EAWN,KAXM,EAYN,KAZM;AADH;AADO,GAAhB;AAmBA,QAAMC,OAAO,GAAG,CACd;AACEC,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,IAAI,EAAE;AAFR,GADc,EAKd;AACED,IAAAA,KAAK,EAAE,WADT;AAEEC,IAAAA,IAAI,EAAE;AAFR,GALc,EASd;AACED,IAAAA,KAAK,EAAE,YADT;AAEEC,IAAAA,IAAI,EAAE;AAFR,GATc,EAad;AACED,IAAAA,KAAK,EAAE,WADT;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAbc,CAAhB;AAmBA,QAAMC,UAAU,GAAGhC,MAAM,CAAC,IAAD,CAAzB;AACA,QAAM,CAACiC,UAAD,EAAaC,iBAAb,IAAkCjC,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACkC,MAAD,EAASC,SAAT,IAAsBnC,QAAQ,CAAC4B,OAAO,CAAC,CAAD,CAAP,CAAWE,IAAZ,CAApC;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAEM,MAAAA,MAAM,EAAE;AAAV,KAAV;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,MAAM,eACJ;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,OAAO,EAAC,WAFV;AAGE,UAAA,KAAK,EAAC,WAHR;AAIE,UAAA,GAAG,EAAEL,UAJP;AAKE,UAAA,OAAO,EAAE,MAAME,iBAAiB,CAAC,IAAD,CALlC;AAME,UAAA,OAAO,eAAE,QAAC,qBAAD;AAAuB,YAAA,QAAQ,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,kBANX;AAAA,oBAQGC;AARH;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,IAAD;AACE,UAAA,QAAQ,EAAEH,UAAU,CAACM,OADvB;AAEE,UAAA,OAAO,EAAE,MAAMJ,iBAAiB,CAAC,KAAD,CAFlC;AAGE,UAAA,IAAI,EAAED,UAHR;AAKE,UAAA,YAAY,EAAE;AACZM,YAAAA,QAAQ,EAAE,QADE;AAEZC,YAAAA,UAAU,EAAE;AAFA,WALhB;AASE,UAAA,eAAe,EAAE;AACfD,YAAAA,QAAQ,EAAE,KADK;AAEfC,YAAAA,UAAU,EAAE;AAFG,WATnB;AAAA,oBAcGX,OAAO,CAACY,GAAR,CAAaC,OAAD,iBACX,QAAC,QAAD;AAEE,YAAA,OAAO,EAAE,MAAM;AACbN,cAAAA,SAAS,CAACM,OAAO,CAACX,IAAT,CAAT;AACAG,cAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,aALH;AAAA,sBAOGQ,OAAO,CAACX;AAPX,aACOW,OAAO,CAACZ,KADf;AAAA;AAAA;AAAA;AAAA,kBADD;AAdH;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA,sBAFJ;AAyCE,MAAA,KAAK,EAAC;AAzCR;AAAA;AAAA;AAAA;AAAA,YADF,eA4CE,QAAC,WAAD;AAAa,MAAA,EAAE,EAAE;AAAEa,QAAAA,EAAE,EAAE;AAAN,OAAjB;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,OAAO,EAAC,MAAb;AAAoB,QAAA,UAAU,EAAC,QAA/B;AAAwC,QAAA,EAAE,EAAE,CAA5C;AAA+C,QAAA,EAAE,EAAE,CAAnD;AAAA,gCACE,QAAC,UAAD;AACE,UAAA,OAAO,EAAC,OADV;AAEE,UAAA,KAAK,EAAC,gBAFR;AAGE,UAAA,EAAE,EAAE;AAAEC,YAAAA,OAAO,EAAE,MAAX;AAAmBC,YAAAA,UAAU,EAAE,QAA/B;AAAyCC,YAAAA,EAAE,EAAE;AAA7C,WAHN;AAAA,kCAKE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,UAAD;AACE,UAAA,OAAO,EAAC,OADV;AAEE,UAAA,KAAK,EAAC,gBAFR;AAGE,UAAA,EAAE,EAAE;AAAEF,YAAAA,OAAO,EAAE,MAAX;AAAmBC,YAAAA,UAAU,EAAE;AAA/B,WAHN;AAAA,kCAKE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAmBE,QAAC,GAAD;AAAK,QAAA,MAAM,EAAE,GAAb;AAAA,+BACE,QAAC,0BAAD;AACE,UAAA,IAAI,EAAEtB,YADR;AAEE,UAAA,MAAM,EAAEG,OAAO,CAACC,KAAR,CAAcC;AAFxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YA5CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyED;;GA3HQN,c;;KAAAA,c;AA6HT,eAAeA,cAAf","sourcesContent":["import { useRef, useState } from 'react';\nimport {\n  Button,\n  Card,\n  Box,\n  CardHeader,\n  Menu,\n  MenuItem,\n  Typography,\n  CardContent\n} from '@mui/material';\n\nimport { styled } from '@mui/material/styles';\nimport ExpandMoreTwoToneIcon from '@mui/icons-material/ExpandMoreTwoTone';\nimport TasksAnalyticsChart from './TasksAnalyticsChart';\n\nconst TasksAnalyticsChartWrapper = styled(TasksAnalyticsChart)(\n  ({ theme }) => `\n        height: 200px;\n`\n);\n\nconst DotPrimaryLight = styled('span')(\n  ({ theme }) => `\n    border-radius: 22px;\n    background: ${theme.colors.primary.lighter};\n    width: ${theme.spacing(1.5)};\n    height: ${theme.spacing(1.5)};\n    display: inline-block;\n    margin-right: ${theme.spacing(0.5)};\n`\n);\n\nconst DotPrimary = styled('span')(\n  ({ theme }) => `\n    border-radius: 22px;\n    background: ${theme.colors.primary.main};\n    width: ${theme.spacing(1.5)};\n    height: ${theme.spacing(1.5)};\n    display: inline-block;\n    margin-right: ${theme.spacing(0.5)};\n`\n);\n\nfunction TasksAnalytics() {\n  \n\n  const transactions = {\n    income: [28, 47, 41, 34, 69, 91, 49, 82, 52, 72, 32, 99],\n    expenses: [38, 85, 64, 40, 97, 82, 58, 42, 55, 46, 57, 70]\n  };\n\n  const generic = {\n    month: {\n      labels: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n'Jul',\n'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec'\n      ]\n    }\n  };\n\n  const periods = [\n    {\n      value: 'today',\n      text: 'Today'\n    },\n    {\n      value: 'yesterday',\n      text: 'Yesterday'\n    },\n    {\n      value: 'last_month',\n      text: 'Last month'\n    },\n    {\n      value: 'last_year',\n      text: 'Last year'\n    }\n  ];\n\n  const actionRef1 = useRef(null);\n  const [openPeriod, setOpenMenuPeriod] = useState(false);\n  const [period, setPeriod] = useState(periods[3].text);\n\n  return (\n    <Card sx={{ height: '100%' }}>\n      <CardHeader\n        action={\n          <>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              color=\"secondary\"\n              ref={actionRef1}\n              onClick={() => setOpenMenuPeriod(true)}\n              endIcon={<ExpandMoreTwoToneIcon fontSize=\"small\" />}\n            >\n              {period}\n            </Button>\n            <Menu\n              anchorEl={actionRef1.current}\n              onClose={() => setOpenMenuPeriod(false)}\n              open={openPeriod}\n              \n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right'\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right'\n              }}\n            >\n              {periods.map((_period) => (\n                <MenuItem\n                  key={_period.value}\n                  onClick={() => {\n                    setPeriod(_period.text);\n                    setOpenMenuPeriod(false);\n                  }}\n                >\n                  {_period.text}\n                </MenuItem>\n              ))}\n            </Menu>\n          </>\n        }\n        title=\"Tasks Analytics\"\n      />\n      <CardContent sx={{ pt: 0 }}>\n        <Box display=\"flex\" alignItems=\"center\" pl={1} pb={3}>\n          <Typography\n            variant=\"body2\"\n            color=\"text.secondary\"\n            sx={{ display: 'flex', alignItems: 'center', mr: 2 }}\n          >\n            <DotPrimary />\n            tasks created\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            color=\"text.secondary\"\n            sx={{ display: 'flex', alignItems: 'center' }}\n          >\n            <DotPrimaryLight />\n            tasks completed\n          </Typography>\n        </Box>\n        <Box height={200}>\n          <TasksAnalyticsChartWrapper\n            data={transactions}\n            labels={generic.month.labels}\n          />\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default TasksAnalytics;\n"]},"metadata":{},"sourceType":"module"}