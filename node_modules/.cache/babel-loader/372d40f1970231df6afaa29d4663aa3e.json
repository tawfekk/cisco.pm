{"ast":null,"code":"var _jsxFileName = \"/home/tawfek/code/src/layouts/SidebarLayout/Header/Buttons/Notifications/index.js\",\n    _s = $RefreshSig$();\n\nimport { alpha, Badge, Box, Divider, IconButton, List, ListItem, Popover, Tooltip, Typography } from '@mui/material';\nimport { useRef, useState } from 'react';\nimport NotificationsActiveTwoToneIcon from '@mui/icons-material/NotificationsActiveTwoTone';\nimport { styled } from '@mui/material/styles';\nimport { formatDistance, subDays } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NotificationsBadge = styled(Badge)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return `\n    \n    .MuiBadge-badge {\n        background-color: ${alpha(theme.palette.error.main, 0.1)};\n        color: ${theme.palette.error.main};\n        min-width: 16px; \n        height: 16px;\n        padding: 0;\n\n        &::after {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            border-radius: 50%;\n            box-shadow: 0 0 0 1px ${alpha(theme.palette.error.main, 0.3)};\n            content: \"\";\n        }\n    }\n`;\n});\n\nfunction HeaderNotifications() {\n  _s();\n\n  const ref = useRef(null);\n  const [isOpen, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      arrow: true,\n      title: \"Notifications\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        ref: ref,\n        onClick: handleOpen,\n        children: /*#__PURE__*/_jsxDEV(NotificationsBadge, {\n          badgeContent: 1,\n          anchorOrigin: {\n            vertical: 'top',\n            horizontal: 'right'\n          },\n          children: /*#__PURE__*/_jsxDEV(NotificationsActiveTwoToneIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      anchorEl: ref.current,\n      onClose: handleClose,\n      open: isOpen,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2\n        },\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          p: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            p: 2,\n            minWidth: 350,\n            display: {\n              xs: 'block',\n              sm: 'flex'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            flex: \"1\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  fontWeight: 'bold'\n                },\n                children: \"Messaging Platform\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                sx: {\n                  textTransform: 'none'\n                },\n                children: formatDistance(subDays(new Date(), 3), new Date(), {\n                  addSuffix: true\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"span\",\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [' ', \"new messages in your inbox\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(HeaderNotifications, \"p0KJCkbnjr5zE6gen2FXbXY1Nqg=\");\n\n_c = HeaderNotifications;\nexport default HeaderNotifications;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderNotifications\");","map":{"version":3,"sources":["/home/tawfek/code/src/layouts/SidebarLayout/Header/Buttons/Notifications/index.js"],"names":["alpha","Badge","Box","Divider","IconButton","List","ListItem","Popover","Tooltip","Typography","useRef","useState","NotificationsActiveTwoToneIcon","styled","formatDistance","subDays","NotificationsBadge","theme","palette","error","main","HeaderNotifications","ref","isOpen","setOpen","handleOpen","handleClose","vertical","horizontal","current","p","minWidth","display","xs","sm","fontWeight","textTransform","Date","addSuffix"],"mappings":"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","sourcesContent":["import {\n  alpha,\n  Badge,\n  Box,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  Popover,\n  Tooltip,\n  Typography\n} from '@mui/material';\nimport { useRef, useState } from 'react';\nimport NotificationsActiveTwoToneIcon from '@mui/icons-material/NotificationsActiveTwoTone';\nimport { styled } from '@mui/material/styles';\n\nimport { formatDistance, subDays } from 'date-fns';\n\nconst NotificationsBadge = styled(Badge)(\n  ({ theme }) => `\n    \n    .MuiBadge-badge {\n        background-color: ${alpha(theme.palette.error.main, 0.1)};\n        color: ${theme.palette.error.main};\n        min-width: 16px; \n        height: 16px;\n        padding: 0;\n\n        &::after {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            border-radius: 50%;\n            box-shadow: 0 0 0 1px ${alpha(theme.palette.error.main, 0.3)};\n            content: \"\";\n        }\n    }\n`\n);\n\nfunction HeaderNotifications() {\n  const ref = useRef(null);\n  const [isOpen, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Tooltip arrow title=\"Notifications\">\n        <IconButton color=\"primary\" ref={ref} onClick={handleOpen}>\n          <NotificationsBadge\n            badgeContent={1}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right'\n            }}\n          >\n            <NotificationsActiveTwoToneIcon />\n          </NotificationsBadge>\n        </IconButton>\n      </Tooltip>\n      <Popover\n        anchorEl={ref.current}\n        onClose={handleClose}\n        open={isOpen}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right'\n        }}\n      >\n        <Box sx={{ p: 2 }} display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Typography variant=\"h5\">Notifications</Typography>\n        </Box>\n        <Divider />\n        <List sx={{ p: 0 }}>\n          <ListItem sx={{ p: 2, minWidth: 350, display: { xs: 'block', sm: 'flex' } }}>\n            <Box flex=\"1\">\n              <Box display=\"flex\" justifyContent=\"space-between\">\n                <Typography sx={{ fontWeight: 'bold' }}>\n                  Messaging Platform\n                </Typography>\n                <Typography variant=\"caption\" sx={{ textTransform: 'none' }}>\n                  {formatDistance(subDays(new Date(), 3), new Date(), {\n                    addSuffix: true\n                  })}\n                </Typography>\n              </Box>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                color=\"text.secondary\"\n              >\n                {' '}\n                new messages in your inbox\n              </Typography>\n            </Box>\n          </ListItem>\n        </List>\n      </Popover>\n    </>\n  );\n}\n\nexport default HeaderNotifications;\n"]},"metadata":{},"sourceType":"module"}