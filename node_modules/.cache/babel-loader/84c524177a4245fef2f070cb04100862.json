{"ast":null,"code":"var _jsxFileName = \"/home/tawfek/cisco.pm/src/content/pages/Components/Tabs/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Helmet } from 'react-helmet-async';\nimport PageTitle from 'src/components/PageTitle';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\nimport { TextareaAutosize, Paper, IconButton, FormControlLabel, Checkbox, Dialog, DialogTitle, Alert, Button, Container, Grid, Card, CardHeader, CardContent, Divider } from '@mui/material';\nimport { useState } from 'react';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Footer from 'src/components/Footer';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport Chip from '@mui/material/Chip';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport * as React from 'react';\nimport Modal from '@mui/material/Modal';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Forms() {\n  _s();\n\n  const [currency, setCurrency] = useState('EUR');\n\n  const handleChange = event => {\n    setCurrency(event.target.value);\n  };\n\n  const [value, setValue] = useState(30);\n\n  const handleChange2 = (event, newValue) => {\n    setValue(newValue);\n  };\n}\n\n_s(Forms, \"VDJ735/W0DD7tB9mb3iHM7D3Hmg=\");\n\n_c = Forms;\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = TabPanel;\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nfunction TabsDemo() {\n  _s2();\n\n  const porte = [\"gi0/0\", \"gi0/1\", \"port-channel 1\"];\n  const [value, setValue] = useState(0); //  const handleChange = (event, newValue) => {\n  //    setValue(newValue);\n  //  };\n  //  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n  //  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n  //  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n  //  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n  //  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    boxShadow: 24,\n    p: 4\n  };\n  const styles = {\n    input: {\n      \"&:invalid\": {\n        border: \"red solid 2px\"\n      }\n    }\n  }; //const Initial_hostname = () => {try{return JSON.parse(localStorage.router_array)[0]['initial'].hostname}catch(error){}}\n\n  const [formFields, setFormFields] = useState([{\n    interfaces: [{\n      porte: []\n    }],\n    initial: [{}]\n  }]);\n\n  const handleFormChange = (event, index) => {\n    let data = [...formFields]; //if (data[0][event.target.id][index] == undefined) {data[0][event.target.id] = {}}\n\n    data[0][event.target.id][index][event.target.name] = event.target.value;\n    setFormFields(data);\n    localStorage.router_array = JSON.stringify(data);\n  };\n\n  const submit = e => {\n    e.preventDefault();\n    console.log(formFields);\n  };\n\n  const addFields = () => {\n    let data = [...formFields];\n    let object = {\n      porte: []\n    };\n    data[0]['interfaces'].push(object); //workingarray = formFields\n\n    setFormFields(data); //localStorage.router_array = JSON.stringify(data)\n  };\n\n  const removeFields = (id, index) => {\n    let data = [...formFields];\n    data[0][id].splice(index, 1);\n    setFormFields(data);\n    localStorage.router_array = JSON.stringify(data);\n  };\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250\n      }\n    }\n  };\n\n  const DHCP = () => {\n    try {\n      var workingvar = \"\";\n\n      if (localStorage.getItem('router_array')) {\n        for (const element of JSON.parse(localStorage.router_array)[0]['dhcp']) {\n          workingvar += \"\\nservice dhcp \\nip dhcp pool \\\"\" + element.navn + \"\\\"\" + \"\\nnetwork \" + element.ip + \" \" + element.subnet + \"\\ndefault-router \" + element.gateway;\n\n          if (element.domæne != \"\") {\n            workingvar += \"\\ndomain-name \" + element.domæne;\n          }\n\n          if (element.DNS != \"\") {\n            workingvar += \"\\ndns-server \" + element.DNS;\n          }\n\n          workingvar += \"\\nexit\"; //for (const elem of Input29.text.replace(\"-\", \" \").split(\"+\")){workingvar += \"\\nip dhcp excluded-address \"+elem}\n        }\n      }\n\n      localStorage.router_DHCP_final = workingvar;\n      return workingvar;\n    } catch (error) {}\n  };\n\n  const Interfaces = () => {\n    try {\n      var workingvar = \"\";\n\n      if (localStorage.getItem('router_array')) {\n        for (const element of JSON.parse(localStorage.router_array[0]['interfaces'])) {\n          workingvar += \"\\ninterface range \" + element.porte.toString() + \"\\nip address \" + element.ip + \" \" + element.subnet;\n\n          if (element.description != \"\" && element.description != undefined) {\n            workingvar += \"\\ndescription \" + element.description;\n          }\n\n          workingvar += \"\\nexit\";\n        }\n      }\n\n      localStorage.router_interfaces_final = workingvar;\n      return workingvar;\n    } catch (error) {}\n  };\n\n  const Start = () => {\n    if (localStorage.getItem('router_array')) {\n      var today = new Date();\n      var workingvar = \"\";\n      var workingarr = JSON.parse(localStorage.router_array)[0]['initial'][0];\n\n      if (true == true) {\n        workingvar += \"clock set \" + today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds() + \" \" + today.getDate() + \" \" + today.toLocaleString('en-us', {\n          month: 'short'\n        }) + \" \" + today.getFullYear();\n      }\n\n      workingvar += \"\\nconfigure terminal\";\n      workingvar += \"\\nset hostname \" + workingarr.hostname;\n      localStorage.router_initial_final = workingvar;\n      return workingvar;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Router\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageTitleWrapper, {\n      children: /*#__PURE__*/_jsxDEV(PageTitle, {\n        heading: \"Router\" //subHeading=\"Rouer konfiguration.\"\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"stretch\",\n        spacing: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Tabs, {\n              variant: \"scrollable\",\n              scrollButtons: \"auto\",\n              textColor: \"primary\",\n              indicatorColor: \"primary\",\n              value: value,\n              onChange: (event, newValue) => {\n                setValue(newValue);\n\n                if (localStorage.getItem('router_array')) {\n                  setFormFields(JSON.parse(localStorage.router_array));\n                }\n              },\n              \"aria-label\": \"basic tabs example\",\n              children: [/*#__PURE__*/_jsxDEV(Tab, {\n                label: \"Initial settings\",\n                ...a11yProps(0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                label: \"Interfaces\",\n                ...a11yProps(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                label: \"Item Three\",\n                ...a11yProps(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                label: \"Item Four\",\n                ...a11yProps(3)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              value: value,\n              index: 0,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  title: \"Basale router indstillinger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    component: \"form\",\n                    sx: {\n                      '& .MuiTextField-root': {\n                        m: 1,\n                        width: '25ch'\n                      }\n                    },\n                    noValidate: true,\n                    autoComplete: \"off\",\n                    children: [formFields[0]['initial'].map((form, index) => {\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(TextField, {\n                          required: true,\n                          id: \"initial\",\n                          name: \"hostname\",\n                          label: \"Hostname\",\n                          value: form.hostname,\n                          placeholder: \"R1\",\n                          onChange: event => handleFormChange(event, 0)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 295,\n                          columnNumber: 23\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          id: \"initial\",\n                          name: \"motd\",\n                          label: \"MOTD\",\n                          value: form.motd,\n                          placeholder: \"Authorized access only!\",\n                          onChange: event => handleFormChange(event, 0)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 305,\n                          columnNumber: 23\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          id: \"initial\",\n                          label: \"Dom\\xE6ne\",\n                          name: \"dom\\xE6ne\",\n                          value: form.domæne,\n                          placeholder: \"domain.internal\",\n                          onChange: event => handleFormChange(event, 0)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 313,\n                          columnNumber: 23\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          id: \"initial\",\n                          name: \"secret\",\n                          label: \"Enable secret\",\n                          value: form.secret,\n                          placeholder: \"class\",\n                          onChange: event => handleFormChange(event, 0)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 321,\n                          columnNumber: 23\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          id: \"initial\",\n                          value: form.con0pass,\n                          name: \"con0pass\",\n                          label: \"Con 0 password\",\n                          placeholder: \"cisco\",\n                          onChange: event => handleFormChange(event, 0)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 329,\n                          columnNumber: 23\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          id: \"initial\",\n                          name: \"vtypass\",\n                          value: form.vtypass,\n                          label: \"Vty 0-15 password\",\n                          placeholder: \"cisco\",\n                          onChange: event => handleFormChange(event, 0)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 337,\n                          columnNumber: 23\n                        }, this)]\n                      }, 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 294,\n                        columnNumber: 21\n                      }, this);\n                    }), /*#__PURE__*/_jsxDEV(Divider, {\n                      sx: {\n                        m: 2\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 348,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outlined\",\n                      color: \"error\",\n                      sx: {\n                        margin: 1\n                      },\n                      size: \"medium\",\n                      onClick: () => {\n                        removeFields('initial', 0);\n                        window.location.reload();\n                      },\n                      children: \"Ryd felter\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 349,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: handleOpen,\n                      variant: \"outlined\",\n                      sx: {\n                        margin: 1\n                      },\n                      size: \"medium\",\n                      color: \"primary\",\n                      children: \"Vis config\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                      open: open,\n                      onClose: handleClose,\n                      \"aria-labelledby\": \"modal-modal-title\",\n                      \"aria-describedby\": \"modal-modal-description\",\n                      children: /*#__PURE__*/_jsxDEV(Box, {\n                        sx: style,\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          id: \"modal-modal-title\",\n                          variant: \"h4\",\n                          component: \"h2\",\n                          children: \"Konfig genereret\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 364,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          multiline: true,\n                          sx: {\n                            mt: 2\n                          },\n                          inputProps: {\n                            style: {\n                              color: \"#FFC13D\"\n                            }\n                          },\n                          maxRows: Infinity,\n                          rows: 5,\n                          style: {\n                            width: '100%'\n                          },\n                          id: \"modal-modal-description\",\n                          value: Start()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 365,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          onClick: () => {\n                            navigator.clipboard.writeText(localStorage.router_initial_final);\n                          },\n                          variant: \"contained\",\n                          sx: {\n                            right: '20%',\n                            left: '20%',\n                            margin: 2\n                          },\n                          size: \"small\",\n                          color: \"secondary\",\n                          children: \"Kopier til udklipsholder\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 375,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 363,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 357,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              value: value,\n              index: 1,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                sx: {\n                  width: '100%'\n                },\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  title: \"Interfaces\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [formFields[0]['interfaces'].map((form, index) => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(Box // sx={{ width: '100%' }}\n                      , {\n                        sx: {\n                          '& .MuiTextField-root': {\n                            m: 1,\n                            width: '25ch'\n                          }\n                        },\n                        autoComplete: \"off\",\n                        children: [/*#__PURE__*/_jsxDEV(TextField, {\n                          name: \"ip\",\n                          label: \"IP\",\n                          id: \"interfaces\",\n                          placeholder: \"192.168.1.1\",\n                          onChange: event => handleFormChange(event, index),\n                          value: form.ip\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 397,\n                          columnNumber: 63\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          name: \"subnet\",\n                          id: \"interfaces\",\n                          label: \"Subnet\",\n                          placeholder: \"255.255.255.0\",\n                          onChange: event => handleFormChange(event, index),\n                          value: form.subnet\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 405,\n                          columnNumber: 63\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          name: \"description\",\n                          id: \"interfaces\",\n                          label: \"Description\",\n                          placeholder: \"portbeskrivelse\",\n                          onChange: event => handleFormChange(event, index),\n                          value: form.description\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 413,\n                          columnNumber: 63\n                        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                          sx: {\n                            m: 1,\n                            width: 220\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                            id: \"interfaces\",\n                            children: \"Porte\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 422,\n                            columnNumber: 97\n                          }, this), /*#__PURE__*/_jsxDEV(Select, {\n                            name: \"porte\",\n                            id: \"interfaces\",\n                            multiple: true,\n                            value: form.porte,\n                            onChange: event => handleFormChange(event, index),\n                            input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                              id: \"select-multiple-chip\",\n                              label: \"Chip\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 434,\n                              columnNumber: 101\n                            }, this),\n                            renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n                              sx: {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                gap: 0.5\n                              },\n                              children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                                label: value\n                              }, value, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 448,\n                                columnNumber: 105\n                              }, this))\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 440,\n                              columnNumber: 101\n                            }, this),\n                            MenuProps: MenuProps,\n                            children: porte.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n                              value: name,\n                              children: name\n                            }, name, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 455,\n                              columnNumber: 101\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 425,\n                            columnNumber: 97\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 421,\n                          columnNumber: 63\n                        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                            sx: {\n                              margin: 1.7,\n                              left: '10%'\n                            },\n                            color: \"warning\",\n                            name: \"shutdown\",\n                            id: \"interfaces\",\n                            checked: form.shutdown,\n                            onChange: event => handleFormChange(event, index)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 461,\n                            columnNumber: 122\n                          }, this),\n                          label: \"Shutdown\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 461,\n                          columnNumber: 95\n                        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                          onClick: () => removeFields('interfaces', index),\n                          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                            color: \"secondary\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 471,\n                            columnNumber: 99\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 470,\n                          columnNumber: 99\n                        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                          sx: {\n                            m: 2\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 473,\n                          columnNumber: 63\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 392,\n                        columnNumber: 63\n                      }, this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 391,\n                      columnNumber: 61\n                    }, this);\n                  }), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    sx: {\n                      margin: 1\n                    },\n                    size: \"medium\",\n                    color: \"primary\",\n                    onClick: addFields,\n                    children: \"Tilf\\xF8j interface\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 478,\n                    columnNumber: 55\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    onClick: handleOpen,\n                    children: \"Vis config\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 55\n                  }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                    open: open,\n                    onClose: handleClose,\n                    \"aria-labelledby\": \"modal-modal-title\",\n                    \"aria-describedby\": \"modal-modal-description\",\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: style,\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        id: \"modal-modal-title\",\n                        variant: \"h4\",\n                        component: \"h2\",\n                        children: \"Konfig genereret\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 487,\n                        columnNumber: 59\n                      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                        multiline: true,\n                        sx: {\n                          mt: 2\n                        },\n                        inputProps: {\n                          style: {\n                            color: \"#FFC13D\"\n                          }\n                        },\n                        maxRows: Infinity,\n                        rows: 5,\n                        style: {\n                          width: '100%'\n                        },\n                        id: \"modal-modal-description\",\n                        value: \"conf terminal\" + Interfaces() + \"\\nend\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 488,\n                        columnNumber: 63\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        onClick: () => {\n                          navigator.clipboard.writeText(localStorage.router_interfaces_final);\n                        },\n                        variant: \"contained\",\n                        sx: {\n                          right: '20%',\n                          left: '20%',\n                          margin: 2\n                        },\n                        size: \"small\",\n                        color: \"secondary\",\n                        children: \"Kopier til udklipsholder\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 498,\n                        columnNumber: 59\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 486,\n                      columnNumber: 59\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 480,\n                    columnNumber: 55\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              value: value,\n              index: 2,\n              children: \"Item Three\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              value: value,\n              index: 3,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                sx: {\n                  width: '100%'\n                },\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  title: \"DHCP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [formFields.map((form, index) => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(Box // sx={{ width: '100%' }}\n                      , {\n                        sx: {\n                          '& .MuiTextField-root': {\n                            m: 1,\n                            width: '25ch'\n                          }\n                        },\n                        autoComplete: \"off\",\n                        children: [/*#__PURE__*/_jsxDEV(TextField, {\n                          name: \"navn\",\n                          id: \"dhcp\",\n                          label: \"Pool navn\",\n                          placeholder: \"pool1\",\n                          onChange: event => handleFormChange(event, index),\n                          value: form.navn\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 522,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          name: \"ip\",\n                          id: \"dhcp\",\n                          label: \"Netv\\xE6rk\",\n                          placeholder: \"192.168.1.0\",\n                          onChange: event => handleFormChange(event, index),\n                          value: form.ip\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 530,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          name: \"subnet\",\n                          id: \"dhcp\",\n                          label: \"Subnet\",\n                          placeholder: \"255.255.255.0\",\n                          onChange: event => handleFormChange(event, index),\n                          value: form.subnet\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 538,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          name: \"gateway\",\n                          label: \"Gateway\",\n                          id: \"dhcp\",\n                          placeholder: \"192.168.1.1\",\n                          onChange: event => handleFormChange(event, index),\n                          value: form.gateway\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 546,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          name: \"dom\\xE6ne\",\n                          label: \"Dom\\xE6ne\",\n                          id: \"dhcp\",\n                          placeholder: \"domain.internal\",\n                          onChange: event => handleFormChange(event, index),\n                          value: form.domæne\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 554,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          name: \"DNS\",\n                          id: \"dhcp\",\n                          label: \"DNS\",\n                          placeholder: \"1.1.1.1\",\n                          onChange: event => handleFormChange(event, index),\n                          value: form.DNS\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 562,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                          onClick: () => removeFields(index, 'dhcp'),\n                          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                            color: \"secondary\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 571,\n                            columnNumber: 41\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 570,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                          sx: {\n                            m: 2\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 573,\n                          columnNumber: 41\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 517,\n                        columnNumber: 41\n                      }, this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 516,\n                      columnNumber: 39\n                    }, this);\n                  }), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    sx: {\n                      margin: 1\n                    },\n                    size: \"medium\",\n                    color: \"primary\",\n                    onClick: addFields,\n                    children: \"Tilf\\xF8j pool\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 578,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    onClick: handleOpen,\n                    children: \"Vis config\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 579,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                    open: open,\n                    onClose: handleClose,\n                    \"aria-labelledby\": \"modal-modal-title\",\n                    \"aria-describedby\": \"modal-modal-description\",\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: style,\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        id: \"modal-modal-title\",\n                        variant: \"h4\",\n                        component: \"h2\",\n                        children: \"Konfig genereret\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 587,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                        multiline: true,\n                        sx: {\n                          mt: 2\n                        },\n                        inputProps: {\n                          style: {\n                            color: \"#FFC13D\"\n                          }\n                        },\n                        maxRows: Infinity,\n                        rows: 5,\n                        style: {\n                          width: '100%'\n                        },\n                        id: \"modal-modal-description\",\n                        value: \"conf terminal\" + DHCP() + \"\\nend\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 588,\n                        columnNumber: 41\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        onClick: () => {\n                          navigator.clipboard.writeText(localStorage.router_DHCP_final);\n                        },\n                        variant: \"contained\",\n                        sx: {\n                          right: '20%',\n                          left: '20%',\n                          margin: 2\n                        },\n                        size: \"small\",\n                        color: \"secondary\",\n                        children: \"Kopier til udklipsholder\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 598,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 586,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 580,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(TabsDemo, \"8XnU7K7Gcy+gzYxI1pGP7rJYMFQ=\");\n\n_c3 = TabsDemo;\nexport default TabsDemo;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Forms\");\n$RefreshReg$(_c2, \"TabPanel\");\n$RefreshReg$(_c3, \"TabsDemo\");","map":{"version":3,"sources":["/home/tawfek/cisco.pm/src/content/pages/Components/Tabs/index.js"],"names":["Helmet","PageTitle","PageTitleWrapper","TextareaAutosize","Paper","IconButton","FormControlLabel","Checkbox","Dialog","DialogTitle","Alert","Button","Container","Grid","Card","CardHeader","CardContent","Divider","useState","Tabs","Tab","Typography","Box","Footer","Input","InputLabel","MenuItem","FormControl","Select","SelectChangeEvent","Chip","OutlinedInput","React","Modal","DeleteIcon","TextField","Forms","currency","setCurrency","handleChange","event","target","value","setValue","handleChange2","newValue","TabPanel","props","children","index","other","p","a11yProps","id","TabsDemo","porte","open","setOpen","handleOpen","handleClose","style","position","top","left","transform","width","bgcolor","boxShadow","styles","input","border","formFields","setFormFields","interfaces","initial","handleFormChange","data","name","localStorage","router_array","JSON","stringify","submit","e","preventDefault","console","log","addFields","object","push","removeFields","splice","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","maxHeight","DHCP","workingvar","getItem","element","parse","navn","ip","subnet","gateway","domæne","DNS","router_DHCP_final","error","Interfaces","toString","description","undefined","router_interfaces_final","Start","today","Date","workingarr","getHours","getMinutes","getSeconds","getDate","toLocaleString","month","getFullYear","hostname","router_initial_final","m","map","form","motd","secret","con0pass","vtypass","margin","window","location","reload","mt","color","Infinity","navigator","clipboard","writeText","right","selected","display","flexWrap","gap","shutdown"],"mappings":"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","sourcesContent":[" import { Helmet } from 'react-helmet-async';\nimport PageTitle from 'src/components/PageTitle';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\nimport { TextareaAutosize, Paper, IconButton, FormControlLabel, Checkbox, Dialog, DialogTitle, Alert, Button, Container, Grid, Card, CardHeader, CardContent, Divider } from '@mui/material';\nimport { useState } from 'react';\n\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Footer from 'src/components/Footer';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport Chip from '@mui/material/Chip';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport * as React from 'react';\nimport Modal from '@mui/material/Modal';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\n\nimport TextField from '@mui/material/TextField';\nfunction Forms() {\n\n  const [currency, setCurrency] = useState('EUR');\n\n  const handleChange = (event) => {\n    setCurrency(event.target.value);\n  };\n\n  const [value, setValue] = useState(30);\n\n  const handleChange2 = (event, newValue) => {\n    setValue(newValue);\n  };\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\n\n\nfunction TabsDemo() {\n\n  const porte = [\n    \"gi0/0\",\n    \"gi0/1\",\n    \"port-channel 1\"\n  ];\n\n\n\n\n  const [value, setValue] = useState(0);\n\n//  const handleChange = (event, newValue) => {\n//    setValue(newValue);\n//  };\n\n//  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n//  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n//  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n//  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n//  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n\nconst [open, setOpen] = React.useState(false);\nconst handleOpen = () => setOpen(true);\nconst handleClose = () => setOpen(false);\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  boxShadow: 24,\n  p: 4,\n};\nconst styles = {\n  input: {\n    \"&:invalid\": {\n      border: \"red solid 2px\"\n    }\n  }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//const Initial_hostname = () => {try{return JSON.parse(localStorage.router_array)[0]['initial'].hostname}catch(error){}}\n\n\n\n\n\n\n\nconst [formFields, setFormFields] = useState(\n  [\n  {\n    interfaces: [ { porte:[] } ],\n    initial:[ {} ]\n  }\n  ]\n)\n\nconst handleFormChange = (event, index) => {\n  let data = [...formFields]\n  //if (data[0][event.target.id][index] == undefined) {data[0][event.target.id] = {}}\n  data[0][event.target.id][index][event.target.name] = event.target.value;\n  setFormFields(data);\n  localStorage.router_array = JSON.stringify(data)\n}\n\nconst submit = (e) => {\n  e.preventDefault();\n  console.log(formFields)\n}\n\nconst addFields = () => {\n  let data = [...formFields]\n  let object = {\n    porte:[]\n  }\n  data[0]['interfaces'].push(object)\n  //workingarray = formFields\n  setFormFields(data)\n  //localStorage.router_array = JSON.stringify(data)\n\n}\n\nconst removeFields = (id, index) => {\n    let data = [...formFields];\n    data[0][id].splice(index, 1);\n    setFormFields(data);\n    localStorage.router_array = JSON.stringify(data)\n}\n\n\n\n\n\n\n\n\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n\n\n\nconst DHCP = () => {\n\n  try{\n\n  var workingvar = \"\"\n  if (localStorage.getItem('router_array')){\n  for (const element of JSON.parse(localStorage.router_array)[0]['dhcp']){\n  workingvar += \"\\nservice dhcp \\nip dhcp pool \\\"\" + element.navn+\"\\\"\"+\"\\nnetwork \"+element.ip +\" \"+element.subnet+\"\\ndefault-router \"+element.gateway\n  \tif (element.domæne != \"\") {workingvar +=  \"\\ndomain-name \"+element.domæne}\n  \tif (element.DNS != \"\") {workingvar +=  \"\\ndns-server \"+element.DNS}\n  \tworkingvar += \"\\nexit\"\n  \t//for (const elem of Input29.text.replace(\"-\", \" \").split(\"+\")){workingvar += \"\\nip dhcp excluded-address \"+elem}\n}}\n    localStorage.router_DHCP_final = workingvar ; return workingvar\n      }catch(error){}\n  }\n\nconst Interfaces = () => {\n\n  try{\n\n  var workingvar = \"\"\n  if (localStorage.getItem('router_array')){\n  for (const element of JSON.parse(localStorage.router_array[0]['interfaces'])){\n    workingvar += \"\\ninterface range \"+element.porte.toString()+\"\\nip address \"+element.ip +\" \"+element.subnet\n  \t\tif(element.description != \"\" && element.description != undefined) {workingvar += \"\\ndescription \"+element.description}\n  \t\tworkingvar += \"\\nexit\"\n  }}\n    localStorage.router_interfaces_final = workingvar ; return workingvar\n\n  }catch(error){}\n}\n\n\nconst Start = () => {\n\nif (localStorage.getItem('router_array')){\n\n\t\tvar today = new Date()\n\t\tvar workingvar = \"\"\n    var workingarr = JSON.parse(localStorage.router_array)[0]['initial'][0]\n    if (true == true) {workingvar += \"clock set \" + today.getHours()+\":\"+today.getMinutes()+\":\"+today.getSeconds()+\" \"+today.getDate()+\" \"+today.toLocaleString('en-us', { month: 'short' })+\" \"+today.getFullYear()}\n    workingvar +=  \"\\nconfigure terminal\"\n    workingvar += \"\\nset hostname \" + workingarr.hostname\n    localStorage.router_initial_final = workingvar; return workingvar\n}}\n\n\n  return (\n    <>\n      <Helmet>\n        <title>Router</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <PageTitle\n          heading=\"Router\"\n //subHeading=\"Rouer konfiguration.\"\n          />\n      </PageTitleWrapper>\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12}>\n                <Box sx={{ width: '100%' }}>\n                  <Tabs variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                    textColor=\"primary\"\n                    indicatorColor=\"primary\" value={value} onChange={(event, newValue) => {setValue(newValue); if (localStorage.getItem('router_array')){setFormFields(JSON.parse(localStorage.router_array))} }} aria-label=\"basic tabs example\">\n                    <Tab label=\"Initial settings\" {...a11yProps(0)} />\n                    <Tab label=\"Interfaces\" {...a11yProps(1)} />\n                    <Tab label=\"Item Three\" {...a11yProps(2)} />\n                    <Tab label=\"Item Four\" {...a11yProps(3)} />\n                  </Tabs>\n                  <TabPanel value={value} index={0}>\n                    <Card>\n                    <CardHeader title=\"Basale router indstillinger\" />\n                    <Divider />\n                    <CardContent>\n                  <Box\n                    component=\"form\"\n                    sx={{\n                    '& .MuiTextField-root': { m: 1, width: '25ch' },\n                    }}\n                    noValidate\n                    autoComplete=\"off\"\n                  >\n                  {formFields[0]['initial'].map((form, index) => {\n                    return (\n                    <div key={0}>\n                      <TextField\n                        required\n                        id=\"initial\"\n                        name=\"hostname\"\n                        label=\"Hostname\"\n                        value = {form.hostname}\n                        placeholder=\"R1\"\n                        onChange={(event) => handleFormChange(event, 0)}\n\n                      />\n                      <TextField\n                        id=\"initial\"\n                        name=\"motd\"\n                        label=\"MOTD\"\n                        value = {form.motd}\n                        placeholder=\"Authorized access only!\"\n                        onChange={(event) => handleFormChange(event, 0)}\n                      />\n                      <TextField\n                        id=\"initial\"\n                        label=\"Domæne\"\n                        name=\"domæne\"\n                        value = {form.domæne}\n                        placeholder=\"domain.internal\"\n                        onChange={(event) => handleFormChange(event, 0)}\n                      />\n                      <TextField\n                        id=\"initial\"\n                        name=\"secret\"\n                        label=\"Enable secret\"\n                        value = {form.secret}\n                        placeholder=\"class\"\n                        onChange={(event) => handleFormChange(event, 0)}\n                      />\n                      <TextField\n                        id=\"initial\"\n                        value = {form.con0pass}\n                        name=\"con0pass\"\n                        label=\"Con 0 password\"\n                        placeholder=\"cisco\"\n                        onChange={(event) => handleFormChange(event, 0)}\n                      />\n                      <TextField\n                        id=\"initial\"\n                        name=\"vtypass\"\n                        value = {form.vtypass}\n                        label=\"Vty 0-15 password\"\n                        placeholder=\"cisco\"\n                        onChange={(event) => handleFormChange(event, 0)}\n                      />\n                    </div>\n                  )\n                })}\n                        <Divider sx={{m: 2}} />\n                        <Button variant=\"outlined\" color=\"error\" sx={{ margin: 1 }} size=\"medium\" onClick={() => {removeFields('initial', 0); window.location.reload()}}\n                        >\n                          Ryd felter\n                        </Button>\n                    <Button onClick={handleOpen} variant=\"outlined\" sx={{ margin: 1 }} size=\"medium\" color=\"primary\">\n                      Vis config\n                    </Button>\n\n                      <Modal\n                          open={open}\n                          onClose={handleClose}\n                          aria-labelledby=\"modal-modal-title\"\n                          aria-describedby=\"modal-modal-description\"\n                          >\n                          <Box sx={style}>\n                          <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">Konfig genereret</Typography>\n                              <TextField\n                                    multiline\n                                    sx={{  mt: 2 }}\n                                    inputProps={{ style: { color: \"#FFC13D\" } }}\n                                    maxRows={Infinity}\n                                    rows={5}\n                                    style={{width: '100%'}}\n                                    id=\"modal-modal-description\"\n                                    value= {Start()}>\n                              </TextField>\n                          <Button onClick={() => {navigator.clipboard.writeText(localStorage.router_initial_final)}} variant=\"contained\" sx={{right: '20%',left: '20%', margin: 2 }} size=\"small\" color=\"secondary\">\n                            Kopier til udklipsholder\n                          </Button>\n                          </Box>\n                      </Modal>\n                  </Box>\n                  </CardContent>\n                  </Card>\n                  </TabPanel>\n                  <TabPanel value={value} index={1}>\n                                        <Card sx={{ width: '100%' }}>\n                                        <CardHeader title=\"Interfaces\" />\n                                        <Divider />\n                                        <CardContent>\n                                                        {formFields[0]['interfaces'].map((form, index) => {\n                                                          return (\n                                                            <div key={index}>\n                                                              <Box// sx={{ width: '100%' }}\n                                                              sx={{\n                                                              '& .MuiTextField-root': { m: 1, width: '25ch' },\n                                                              }}\n                                                              autoComplete=\"off\">\n                                                              <TextField\n                                                                name='ip'\n                                                                label=\"IP\"\n                                                                id=\"interfaces\"\n                                                                placeholder=\"192.168.1.1\"\n                                                                onChange={event => handleFormChange(event, index)}\n                                                                value={form.ip}\n                                                              />\n                                                              <TextField\n                                                                name='subnet'\n                                                                id=\"interfaces\"\n                                                                label=\"Subnet\"\n                                                                placeholder='255.255.255.0'\n                                                                onChange={event => handleFormChange(event, index)}\n                                                                value={form.subnet}\n                                                              />\n                                                              <TextField\n                                                                name='description'\n                                                                id=\"interfaces\"\n                                                                label=\"Description\"\n                                                                placeholder='portbeskrivelse'\n                                                                onChange={event => handleFormChange(event, index)}\n                                                                value={form.description}\n                                                              />\n                                                              <FormControl sx={{ m: 1, width: 220 }}>\n                                                                                                <InputLabel id=\"interfaces\">\n                                                                                                  Porte\n                                                                                                </InputLabel>\n                                                                                                <Select\n                                                                                                  name='porte'\n                                                                                                  id=\"interfaces\"\n                                                                                                  multiple\n                                                                                                  value={form.porte}\n                                                                                                  onChange={(event) =>\n                                                                                                    handleFormChange(event, index)\n                                                                                                  }\n                                                                                                  input={\n                                                                                                    <OutlinedInput\n                                                                                                      id=\"select-multiple-chip\"\n                                                                                                      label=\"Chip\"\n                                                                                                    />\n                                                                                                  }\n                                                                                                  renderValue={(selected) => (\n                                                                                                    <Box\n                                                                                                      sx={{\n                                                                                                        display: 'flex',\n                                                                                                        flexWrap: 'wrap',\n                                                                                                        gap: 0.5\n                                                                                                      }}\n                                                                                                    >\n                                                                                                      {selected.map((value) => (\n                                                                                                        <Chip key={value} label={value} />\n                                                                                                      ))}\n                                                                                                    </Box>\n                                                                                                  )}\n                                                                                                  MenuProps={MenuProps}\n                                                                                                >\n                                                                                                  {porte.map((name) => (\n                                                                                                    <MenuItem key={name} value={name}>\n                                                                                                      {name}\n                                                                                                    </MenuItem>\n                                                                                                  ))}\n                                                                                                </Select>\n                                                                                              </FormControl>\n                                                                                              <FormControlLabel control={<Checkbox sx={{ margin: 1.7, left: '10%'}}\n                                                                                                  color=\"warning\"\n                                                                                                  name='shutdown'\n                                                                                                  id=\"interfaces\"\n                                                                                                  checked={form.shutdown}\n                                                                                                  onChange={(event) =>\n                                                                                                    handleFormChange(event, index)\n                                                                                                  }\n                                                                                                />} label=\"Shutdown\" />\n                                                                                                  <IconButton onClick={() => removeFields('interfaces',index)}>\n                                                                                                  <DeleteIcon color=\"secondary\"  />\n                                                                                                  </IconButton>\n                                                              <Divider sx={{m: 2}} />\n                                                              </Box>\n                                                            </div>\n                                                          )\n                                                        })}\n                                                      <Button variant=\"contained\" sx={{ margin: 1 }} size=\"medium\" color=\"primary\" onClick={addFields}>Tilføj interface</Button>\n                                                      <Button variant=\"outlined\" onClick={handleOpen}>Vis config</Button>\n                                                      <Modal\n                                                          open={open}\n                                                          onClose={handleClose}\n                                                          aria-labelledby=\"modal-modal-title\"\n                                                          aria-describedby=\"modal-modal-description\"\n                                                          >\n                                                          <Box sx={style}>\n                                                          <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">Konfig genereret</Typography>\n                                                              <TextField\n                                                                    multiline\n                                                                    sx={{  mt: 2 }}\n                                                                    inputProps={{ style: { color: \"#FFC13D\" } }}\n                                                                    maxRows={Infinity}\n                                                                    rows={5}\n                                                                    style={{width: '100%'}}\n                                                                    id=\"modal-modal-description\"\n                                                                    value= {\"conf terminal\"+Interfaces()+\"\\nend\"}>\n                                                              </TextField>\n                                                          <Button onClick={() => {navigator.clipboard.writeText(localStorage.router_interfaces_final)}} variant=\"contained\" sx={{right: '20%',left: '20%', margin: 2 }} size=\"small\" color=\"secondary\">\n                                                            Kopier til udklipsholder\n                                                          </Button>\n                                                          </Box>\n                                                      </Modal>\n                                                      </CardContent>\n                                                  </Card>\n                  </TabPanel>\n                  <TabPanel value={value} index={2}>\n                    Item Three\n                  </TabPanel>\n                  <TabPanel value={value} index={3}>\n                  <Card sx={{ width: '100%' }}>\n                  <CardHeader title=\"DHCP\" />\n                  <Divider />\n                  <CardContent>\n                                  {formFields.map((form, index) => {\n                                    return (\n                                      <div key={index}>\n                                        <Box// sx={{ width: '100%' }}\n                                        sx={{\n                                        '& .MuiTextField-root': { m: 1, width: '25ch' },\n                                        }}\n                                        autoComplete=\"off\">\n                                        <TextField\n                                          name='navn'\n                                          id=\"dhcp\"\n                                          label=\"Pool navn\"\n                                          placeholder='pool1'\n                                          onChange={event => handleFormChange(event, index)}\n                                          value={form.navn}\n                                        />\n                                        <TextField\n                                          name='ip'\n                                          id='dhcp'\n                                          label=\"Netværk\"\n                                          placeholder=\"192.168.1.0\"\n                                          onChange={event => handleFormChange(event, index)}\n                                          value={form.ip}\n                                        />\n                                        <TextField\n                                          name='subnet'\n                                          id='dhcp'\n                                          label=\"Subnet\"\n                                          placeholder='255.255.255.0'\n                                          onChange={event => handleFormChange(event, index)}\n                                          value={form.subnet}\n                                        />\n                                        <TextField\n                                          name='gateway'\n                                          label=\"Gateway\"\n                                          id='dhcp'\n                                          placeholder='192.168.1.1'\n                                          onChange={event => handleFormChange(event, index)}\n                                          value={form.gateway}\n                                        />\n                                        <TextField\n                                          name='domæne'\n                                          label=\"Domæne\"\n                                          id='dhcp'\n                                          placeholder='domain.internal'\n                                          onChange={event => handleFormChange(event, index)}\n                                          value={form.domæne}\n                                        />\n                                        <TextField\n                                          name='DNS'\n                                          id='dhcp'\n                                          label=\"DNS\"\n                                          placeholder='1.1.1.1'\n                                          onChange={event => handleFormChange(event, index)}\n                                          value={form.DNS}\n                                        />\n                                        <IconButton onClick={() => removeFields(index, 'dhcp')}>\n                                        <DeleteIcon color=\"secondary\" />\n                                        </IconButton>\n                                        <Divider sx={{m: 2}} />\n                                        </Box>\n                                      </div>\n                                    )\n                                  })}\n                                <Button variant=\"outlined\" sx={{ margin: 1 }} size=\"medium\" color=\"primary\" onClick={addFields}>Tilføj pool</Button>\n                                <Button variant=\"contained\" onClick={handleOpen}>Vis config</Button>\n                                <Modal\n                                    open={open}\n                                    onClose={handleClose}\n                                    aria-labelledby=\"modal-modal-title\"\n                                    aria-describedby=\"modal-modal-description\"\n                                    >\n                                    <Box sx={style}>\n                                    <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">Konfig genereret</Typography>\n                                        <TextField\n                                              multiline\n                                              sx={{  mt: 2 }}\n                                              inputProps={{ style: { color: \"#FFC13D\" } }}\n                                              maxRows={Infinity}\n                                              rows={5}\n                                              style={{width: '100%'}}\n                                              id=\"modal-modal-description\"\n                                              value= {\"conf terminal\"+DHCP()+\"\\nend\"}>\n                                        </TextField>\n                                    <Button onClick={() => {navigator.clipboard.writeText(localStorage.router_DHCP_final)}} variant=\"contained\" sx={{right: '20%',left: '20%', margin: 2 }} size=\"small\" color=\"secondary\">\n                                      Kopier til udklipsholder\n                                    </Button>\n                                    </Box>\n                                </Modal>\n                                </CardContent>\n                            </Card>\n                  </TabPanel>\n                </Box>\n\n\n          </Grid>\n        </Grid>\n      </Container>\n      <Footer />\n    </>\n  );\n}\n\nexport default TabsDemo;\n"]},"metadata":{},"sourceType":"module"}