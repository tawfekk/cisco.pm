{"ast":null,"code":"var _jsxFileName = \"/home/tawfek/cisco.pm/src/content/pages/Components/Tabs/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Helmet } from \"react-helmet-async\";\nimport PageTitle from \"src/components/PageTitle\";\nimport PageTitleWrapper from \"src/components/PageTitleWrapper\";\nimport { TextareaAutosize, Paper, IconButton, FormControlLabel, Checkbox, Dialog, DialogTitle, Alert, Button, Container, Grid, Card, CardHeader, CardContent, Divider } from \"@mui/material\";\nimport { useState } from \"react\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport Footer from \"src/components/Footer\";\nimport Input from \"@mui/material/Input\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport Chip from \"@mui/material/Chip\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport * as React from \"react\";\nimport Modal from \"@mui/material/Modal\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport TextField from \"@mui/material/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Forms() {\n  _s();\n\n  const [currency, setCurrency] = useState(\"EUR\");\n\n  const handleChange = event => {\n    setCurrency(event.target.value);\n  };\n\n  const [value, setValue] = useState(30);\n\n  const handleChange2 = (event, newValue) => {\n    setValue(newValue);\n  };\n}\n\n_s(Forms, \"ITg8mYezZfcShBfRpWtj4ZWvATM=\");\n\n_c = Forms;\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = TabPanel;\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\n\nfunction TabsDemo() {\n  _s2();\n\n  const porte = [\"gi0/0\", \"gi0/1\", \"port-channel 1\"];\n  const [value, setValue] = useState(0); //  const handleChange = (event, newValue) => {\n  //    setValue(newValue);\n  //  };\n  //  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n  //  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n  //  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n  //  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n  //  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const style = {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: 400,\n    bgcolor: \"background.paper\",\n    boxShadow: 24,\n    p: 4\n  };\n  const styles = {\n    input: {\n      \"&:invalid\": {\n        border: \"red solid 2px\"\n      }\n    }\n  }; //const Initial_hostname = () => {try{return JSON.parse(localStorage.router_data)[0]['initial'].hostname}catch(error){}}\n\n  const [formFields, setFormFields] = useState({\n    interfaces: [{\n      porte: []\n    }],\n    dhcp: [{\n      ip: \"\"\n    }],\n    initial: [{\n      hostname: \"\"\n    }]\n  });\n\n  const handleFormChange = (event, index) => {\n    let data = { ...formFields\n    }; //if (data[0][event.target.id][index] == undefined) {data[0][event.target.id] = {}}\n\n    data[event.target.id][index][event.target.name] = event.target.value;\n    setFormFields(data);\n    localStorage.router_data = JSON.stringify(data);\n  };\n\n  const submit = e => {\n    e.preventDefault();\n    console.log(formFields);\n  };\n\n  const addFields = id => {\n    let data = { ...formFields\n    };\n    let object = {\n      porte: [],\n      dhcp: []\n    };\n    data[id].push(object); //workingarray = formFields\n\n    setFormFields(data); //localStorage.router_data = JSON.stringify(data)\n  };\n\n  const removeFields = (id, index) => {\n    let data = { ...formFields\n    };\n    data[id].splice(index, 1);\n    setFormFields(data);\n    localStorage.router_data = JSON.stringify(data);\n  };\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250\n      }\n    }\n  };\n\n  const DHCP = () => {\n    try {\n      var workingvar = \"\";\n\n      if (localStorage.getItem(\"router_data\")) {\n        for (const element of JSON.parse(localStorage.router_data)[\"dhcp\"]) {\n          workingvar += '\\nservice dhcp \\nip dhcp pool \"' + element.navn + '\"' + \"\\nnetwork \" + element.ip + \" \" + element.subnet + \"\\ndefault-router \" + element.gateway;\n\n          if (element.domæne != undefined) {\n            workingvar += \"\\ndomain-name \" + element.domæne;\n          }\n\n          if (element.DNS != undefined) {\n            workingvar += \"\\ndns-server \" + element.DNS;\n          }\n\n          workingvar += \"\\nexit\"; //for (const elem of Input29.text.replace(\"-\", \" \").split(\"+\")){workingvar += \"\\nip dhcp excluded-address \"+elem}\n        }\n      }\n\n      localStorage.router_final = JSON.stringify({\n        dhcp: workingvar\n      });\n      return workingvar;\n    } catch (error) {}\n  };\n\n  const Interfaces = () => {\n    try {\n      var workingvar = \"\";\n\n      if (localStorage.getItem(\"router_data\")) {\n        for (const element of JSON.parse(localStorage.router_data)[\"interfaces\"]) {\n          workingvar += \"\\ninterface range \" + element.porte.toString() + \"\\nip address \" + element.ip + \" \" + element.subnet;\n\n          if (element.description != \"\" && element.description != undefined) {\n            workingvar += \"\\ndescription \" + element.description;\n          }\n\n          workingvar += \"\\nexit\";\n        }\n      }\n\n      localStorage.router_final = JSON.stringify({\n        interfaces: workingvar\n      });\n      return workingvar;\n    } catch (error) {}\n  };\n\n  window.onload = function () {\n    if (localStorage.getItem(\"router_data\")) {\n      let data = { ...formFields\n      };\n      setFormFields(data);\n      setFormFields(JSON.parse(localStorage.router_data));\n    }\n  };\n\n  const Start = () => {\n    try {\n      if (localStorage.getItem(\"router_data\")) {\n        var today = new Date();\n        var workingvar = \"\";\n        var workingarr = JSON.parse(localStorage.router_data)[\"initial\"][0];\n\n        if (true == true) {\n          workingvar += \"clock set \" + today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds() + \" \" + today.getDate() + \" \" + today.toLocaleString(\"en-us\", {\n            month: \"short\"\n          }) + \" \" + today.getFullYear();\n        }\n\n        workingvar += \"\\nconfigure terminal\";\n        workingvar += \"\\nset hostname \" + workingarr.hostname;\n\n        if (workingarr.motd != \"\") {\n          workingvar += \"\\nbanner motd #\" + workingarr.motd + \"#\";\n        }\n\n        localStorage.router_final = JSON.stringify({\n          initial: workingvar\n        });\n        return workingvar;\n      }\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Router\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageTitleWrapper, {\n      children: /*#__PURE__*/_jsxDEV(PageTitle, {\n        heading: \"Router\" //subHeading=\"Rouer konfiguration.\"\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"stretch\",\n        spacing: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: \"100%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Tabs, {\n              variant: \"scrollable\",\n              scrollButtons: \"auto\",\n              textColor: \"primary\",\n              indicatorColor: \"primary\",\n              value: value,\n              onChange: (event, newValue) => {\n                setValue(newValue);\n              },\n              children: [/*#__PURE__*/_jsxDEV(Tab, {\n                label: \"Initial settings\",\n                ...a11yProps(0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                label: \"Interfaces\",\n                ...a11yProps(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                label: \"Subinterfaces\",\n                ...a11yProps(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                label: \"DHCP\",\n                ...a11yProps(3)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              value: value,\n              index: 0,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  title: \"Basale router indstillinger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    component: \"form\",\n                    sx: {\n                      \"& .MuiTextField-root\": {\n                        m: 1,\n                        width: \"25ch\"\n                      }\n                    },\n                    noValidate: true,\n                    autoComplete: \"off\",\n                    children: [formFields[\"initial\"].map((form, index) => {\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(TextField, {\n                          required: true,\n                          id: \"initial\",\n                          name: \"hostname\",\n                          label: \"Hostname\",\n                          value: form.hostname,\n                          placeholder: \"R1\",\n                          onChange: event => handleFormChange(event, 0),\n                          InputLabelProps: {\n                            shrink: true\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 315,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          required: true,\n                          id: \"initial\",\n                          name: \"motd\",\n                          InputLabelProps: {\n                            shrink: true\n                          },\n                          label: \"MOTD\",\n                          value: form.motd,\n                          placeholder: \"Authorized access only!\",\n                          onChange: event => handleFormChange(event, 0)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 325,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          id: \"initial\",\n                          label: \"Dom\\xE6ne\",\n                          name: \"dom\\xE6ne\",\n                          value: form.domæne,\n                          placeholder: \"domain.internal\",\n                          onChange: event => handleFormChange(event, 0),\n                          InputLabelProps: {\n                            shrink: true\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 335,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          id: \"initial\",\n                          name: \"secret\",\n                          label: \"Enable secret\",\n                          value: form.secret,\n                          placeholder: \"class\",\n                          onChange: event => handleFormChange(event, 0),\n                          InputLabelProps: {\n                            shrink: true\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 344,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          id: \"initial\",\n                          value: form.con0pass,\n                          name: \"con0pass\",\n                          label: \"Con 0 password\",\n                          placeholder: \"cisco\",\n                          onChange: event => handleFormChange(event, 0),\n                          InputLabelProps: {\n                            shrink: true\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 353,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          id: \"initial\",\n                          name: \"vtypass\",\n                          value: form.vtypass,\n                          label: \"Vty 0-15 password\",\n                          placeholder: \"cisco\",\n                          onChange: event => handleFormChange(event, 0),\n                          InputLabelProps: {\n                            shrink: true\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 362,\n                          columnNumber: 29\n                        }, this)]\n                      }, 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 314,\n                        columnNumber: 27\n                      }, this);\n                    }), /*#__PURE__*/_jsxDEV(Divider, {\n                      sx: {\n                        m: 2\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 374,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outlined\",\n                      color: \"error\",\n                      sx: {\n                        margin: 1\n                      },\n                      size: \"medium\",\n                      onClick: () => {\n                        removeFields(\"initial\", 0);\n                        window.location.reload();\n                      },\n                      children: \"Ryd felter\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 375,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: handleOpen,\n                      variant: \"outlined\",\n                      sx: {\n                        margin: 1\n                      },\n                      size: \"medium\",\n                      color: \"primary\",\n                      children: \"Vis config\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 387,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                      open: open,\n                      onClose: handleClose,\n                      \"aria-labelledby\": \"modal-modal-title\",\n                      \"aria-describedby\": \"modal-modal-description\",\n                      children: /*#__PURE__*/_jsxDEV(Box, {\n                        sx: style,\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          id: \"modal-modal-title\",\n                          variant: \"h4\",\n                          component: \"h2\",\n                          children: \"Konfig genereret\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 404,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          multiline: true,\n                          sx: {\n                            mt: 2\n                          },\n                          inputProps: {\n                            style: {\n                              color: \"#FFC13D\"\n                            }\n                          },\n                          maxRows: Infinity,\n                          rows: 5,\n                          style: {\n                            width: \"100%\"\n                          },\n                          id: \"modal-modal-description\",\n                          value: Start()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 411,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          onClick: () => {\n                            navigator.clipboard.writeText(localStorage.router_initial_final);\n                          },\n                          variant: \"contained\",\n                          sx: {\n                            right: \"20%\",\n                            left: \"20%\",\n                            margin: 2\n                          },\n                          size: \"small\",\n                          color: \"secondary\",\n                          children: \"Kopier til udklipsholder\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 421,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 403,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 397,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              value: value,\n              index: 1,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                sx: {\n                  width: \"100%\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  title: \"Interfaces\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [formFields[\"interfaces\"].map((form, index) => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(Box // sx={{ width: '100%' }}\n                      , {\n                        sx: {\n                          \"& .MuiTextField-root\": {\n                            m: 1,\n                            width: \"25ch\"\n                          }\n                        },\n                        autoComplete: \"off\",\n                        children: [/*#__PURE__*/_jsxDEV(TextField, {\n                          name: \"ip\",\n                          label: \"IP\",\n                          id: \"interfaces\",\n                          placeholder: \"192.168.1.1\",\n                          onChange: event => handleFormChange(event, index),\n                          value: form.ip\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 454,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          name: \"subnet\",\n                          id: \"interfaces\",\n                          label: \"Subnet\",\n                          placeholder: \"255.255.255.0\",\n                          onChange: event => handleFormChange(event, index),\n                          value: form.subnet\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 464,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          name: \"description\",\n                          id: \"interfaces\",\n                          label: \"Description\",\n                          placeholder: \"portbeskrivelse\",\n                          onChange: event => handleFormChange(event, index),\n                          value: form.description\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 474,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                          sx: {\n                            m: 1,\n                            width: 220\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                            id: \"interfaces\",\n                            children: \"Porte\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 485,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(Select, {\n                            name: \"porte\",\n                            id: \"interfaces\",\n                            multiple: true,\n                            value: form.porte,\n                            onChange: event => handleFormChange(event, index),\n                            input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                              id: \"select-multiple-chip\",\n                              label: \"Chip\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 495,\n                              columnNumber: 35\n                            }, this),\n                            renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n                              sx: {\n                                display: \"flex\",\n                                flexWrap: \"wrap\",\n                                gap: 0.5\n                              },\n                              children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                                label: value\n                              }, value, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 509,\n                                columnNumber: 39\n                              }, this))\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 501,\n                              columnNumber: 35\n                            }, this),\n                            MenuProps: MenuProps,\n                            children: porte.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n                              value: name,\n                              children: name\n                            }, name, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 516,\n                              columnNumber: 35\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 486,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 484,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                            sx: {\n                              margin: 1.7,\n                              left: \"10%\"\n                            },\n                            color: \"warning\",\n                            name: \"shutdown\",\n                            id: \"interfaces\",\n                            checked: form.shutdown,\n                            onChange: event => handleFormChange(event, index)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 524,\n                            columnNumber: 33\n                          }, this),\n                          label: \"Shutdown\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 522,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                          onClick: () => removeFields(\"interfaces\", index),\n                          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                            color: \"secondary\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 540,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 537,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                          sx: {\n                            m: 2\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 542,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 448,\n                        columnNumber: 27\n                      }, this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 447,\n                      columnNumber: 25\n                    }, this);\n                  }), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    sx: {\n                      margin: 1\n                    },\n                    size: \"medium\",\n                    color: \"primary\",\n                    onClick: () => addFields(\"interfaces\"),\n                    children: \"Tilf\\xF8j interface\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 547,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    onClick: handleOpen,\n                    children: \"Vis config\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 556,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                    open: open,\n                    onClose: handleClose,\n                    \"aria-labelledby\": \"modal-modal-title\",\n                    \"aria-describedby\": \"modal-modal-description\",\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: style,\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        id: \"modal-modal-title\",\n                        variant: \"h4\",\n                        component: \"h2\",\n                        children: \"Konfig genereret\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 566,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                        multiline: true,\n                        sx: {\n                          mt: 2\n                        },\n                        inputProps: {\n                          style: {\n                            color: \"#FFC13D\"\n                          }\n                        },\n                        maxRows: Infinity,\n                        rows: 5,\n                        style: {\n                          width: \"100%\"\n                        },\n                        id: \"modal-modal-description\",\n                        value: \"conf terminal\" + Interfaces() + \"\\nend\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 573,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        onClick: () => {\n                          navigator.clipboard.writeText(localStorage.router_interfaces_final);\n                        },\n                        variant: \"contained\",\n                        sx: {\n                          right: \"20%\",\n                          left: \"20%\",\n                          margin: 2\n                        },\n                        size: \"small\",\n                        color: \"secondary\",\n                        children: \"Kopier til udklipsholder\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 583,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 565,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 559,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              value: value,\n              index: 2,\n              children: \"Item Three\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              value: value,\n              index: 3,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                sx: {\n                  width: \"100%\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  title: \"DHCP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [formFields[\"dhcp\"].map((form, index) => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(Box // sx={{ width: '100%' }}\n                      , {\n                        sx: {\n                          \"& .MuiTextField-root\": {\n                            m: 1,\n                            width: \"25ch\"\n                          }\n                        },\n                        autoComplete: \"off\",\n                        children: [/*#__PURE__*/_jsxDEV(TextField, {\n                          name: \"navn\",\n                          id: \"dhcp\",\n                          label: \"Pool navn\",\n                          placeholder: \"pool1\",\n                          onChange: event => handleFormChange(event, index),\n                          value: form.navn\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 618,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          name: \"ip\",\n                          id: \"dhcp\",\n                          label: \"Netv\\xE6rk\",\n                          placeholder: \"192.168.1.0\",\n                          onChange: event => handleFormChange(event, index),\n                          value: form.ip\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 628,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          name: \"subnet\",\n                          id: \"dhcp\",\n                          label: \"Subnet\",\n                          placeholder: \"255.255.255.0\",\n                          onChange: event => handleFormChange(event, index),\n                          value: form.subnet\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 638,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          name: \"gateway\",\n                          label: \"Gateway\",\n                          id: \"dhcp\",\n                          placeholder: \"192.168.1.1\",\n                          onChange: event => handleFormChange(event, index),\n                          value: form.gateway\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 648,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          name: \"dom\\xE6ne\",\n                          label: \"Dom\\xE6ne\",\n                          id: \"dhcp\",\n                          placeholder: \"domain.internal\",\n                          onChange: event => handleFormChange(event, index),\n                          value: form.domæne\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 658,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          name: \"DNS\",\n                          id: \"dhcp\",\n                          label: \"DNS\",\n                          placeholder: \"1.1.1.1\",\n                          onChange: event => handleFormChange(event, index),\n                          value: form.DNS\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 668,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                          onClick: () => removeFields(\"dhcp\", index),\n                          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                            color: \"secondary\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 681,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 678,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                          sx: {\n                            m: 2\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 683,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 612,\n                        columnNumber: 27\n                      }, this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 611,\n                      columnNumber: 25\n                    }, this);\n                  }), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    sx: {\n                      margin: 1\n                    },\n                    size: \"medium\",\n                    color: \"primary\",\n                    onClick: () => addFields(\"dhcp\"),\n                    children: \"Tilf\\xF8j pool\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 688,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    onClick: handleOpen,\n                    children: \"Vis config\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 697,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                    open: open,\n                    onClose: handleClose,\n                    \"aria-labelledby\": \"modal-modal-title\",\n                    \"aria-describedby\": \"modal-modal-description\",\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: style,\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        id: \"modal-modal-title\",\n                        variant: \"h4\",\n                        component: \"h2\",\n                        children: \"Konfig genereret\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 707,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                        multiline: true,\n                        sx: {\n                          mt: 2\n                        },\n                        inputProps: {\n                          style: {\n                            color: \"#FFC13D\"\n                          }\n                        },\n                        maxRows: Infinity,\n                        rows: 5,\n                        style: {\n                          width: \"100%\"\n                        },\n                        id: \"modal-modal-description\",\n                        value: \"conf terminal\" + DHCP() + \"\\nend\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 714,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        onClick: () => {\n                          navigator.clipboard.writeText(localStorage.router_DHCP_final);\n                        },\n                        variant: \"contained\",\n                        sx: {\n                          right: \"20%\",\n                          left: \"20%\",\n                          margin: 2\n                        },\n                        size: \"small\",\n                        color: \"secondary\",\n                        children: \"Kopier til udklipsholder\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 724,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 706,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 700,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 608,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(TabsDemo, \"817RRfc5xT7G/WbOfW2iPpT1paM=\");\n\n_c3 = TabsDemo;\nexport default TabsDemo;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Forms\");\n$RefreshReg$(_c2, \"TabPanel\");\n$RefreshReg$(_c3, \"TabsDemo\");","map":{"version":3,"sources":["/home/tawfek/cisco.pm/src/content/pages/Components/Tabs/index.js"],"names":["Helmet","PageTitle","PageTitleWrapper","TextareaAutosize","Paper","IconButton","FormControlLabel","Checkbox","Dialog","DialogTitle","Alert","Button","Container","Grid","Card","CardHeader","CardContent","Divider","useState","Tabs","Tab","Typography","Box","Footer","Input","InputLabel","MenuItem","FormControl","Select","SelectChangeEvent","Chip","OutlinedInput","React","Modal","DeleteIcon","TextField","Forms","currency","setCurrency","handleChange","event","target","value","setValue","handleChange2","newValue","TabPanel","props","children","index","other","p","a11yProps","id","TabsDemo","porte","open","setOpen","handleOpen","handleClose","style","position","top","left","transform","width","bgcolor","boxShadow","styles","input","border","formFields","setFormFields","interfaces","dhcp","ip","initial","hostname","handleFormChange","data","name","localStorage","router_data","JSON","stringify","submit","e","preventDefault","console","log","addFields","object","push","removeFields","splice","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","maxHeight","DHCP","workingvar","getItem","element","parse","navn","subnet","gateway","domæne","undefined","DNS","router_final","error","Interfaces","toString","description","window","onload","Start","today","Date","workingarr","getHours","getMinutes","getSeconds","getDate","toLocaleString","month","getFullYear","motd","m","map","form","shrink","secret","con0pass","vtypass","margin","location","reload","mt","color","Infinity","navigator","clipboard","writeText","router_initial_final","right","selected","display","flexWrap","gap","shutdown","router_interfaces_final","router_DHCP_final"],"mappings":"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","sourcesContent":["import { Helmet } from \"react-helmet-async\";\nimport PageTitle from \"src/components/PageTitle\";\nimport PageTitleWrapper from \"src/components/PageTitleWrapper\";\nimport {\n  TextareaAutosize,\n  Paper,\n  IconButton,\n  FormControlLabel,\n  Checkbox,\n  Dialog,\n  DialogTitle,\n  Alert,\n  Button,\n  Container,\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n} from \"@mui/material\";\nimport { useState } from \"react\";\n\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport Footer from \"src/components/Footer\";\nimport Input from \"@mui/material/Input\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport Chip from \"@mui/material/Chip\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport * as React from \"react\";\nimport Modal from \"@mui/material/Modal\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nimport TextField from \"@mui/material/TextField\";\nfunction Forms() {\n  const [currency, setCurrency] = useState(\"EUR\");\n\n  const handleChange = (event) => {\n    setCurrency(event.target.value);\n  };\n\n  const [value, setValue] = useState(30);\n\n  const handleChange2 = (event, newValue) => {\n    setValue(newValue);\n  };\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nfunction TabsDemo() {\n  const porte = [\"gi0/0\", \"gi0/1\", \"port-channel 1\"];\n\n  const [value, setValue] = useState(0);\n\n  //  const handleChange = (event, newValue) => {\n  //    setValue(newValue);\n  //  };\n\n  //  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n  //  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n  //  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n  //  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n  //  const [Hostname, setHostname] = useState(localStorage.router_initial_hostname_input);\n\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const style = {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: 400,\n    bgcolor: \"background.paper\",\n    boxShadow: 24,\n    p: 4,\n  };\n  const styles = {\n    input: {\n      \"&:invalid\": {\n        border: \"red solid 2px\",\n      },\n    },\n  };\n\n  //const Initial_hostname = () => {try{return JSON.parse(localStorage.router_data)[0]['initial'].hostname}catch(error){}}\n\n  const [formFields, setFormFields] = useState({\n    interfaces: [{ porte: [] }],\n    dhcp: [{ ip: \"\" }],\n    initial: [{hostname: \"\" }]\n  });\n\n  const handleFormChange = (event, index) => {\n    let data = { ...formFields };\n    //if (data[0][event.target.id][index] == undefined) {data[0][event.target.id] = {}}\n    data[event.target.id][index][event.target.name] = event.target.value;\n    setFormFields(data);\n    localStorage.router_data = JSON.stringify(data);\n  };\n\n  const submit = (e) => {\n    e.preventDefault();\n    console.log(formFields);\n  };\n\n  const addFields = (id) => {\n    let data = { ...formFields };\n    let object = {\n      porte: [],\n      dhcp: [],\n    };\n    data[id].push(object);\n    //workingarray = formFields\n    setFormFields(data);\n    //localStorage.router_data = JSON.stringify(data)\n  };\n\n  const removeFields = (id, index) => {\n    let data = { ...formFields };\n    data[id].splice(index, 1);\n    setFormFields(data);\n    localStorage.router_data = JSON.stringify(data);\n  };\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  };\n\n  const DHCP = () => {\n    try {\n      var workingvar = \"\";\n      if (localStorage.getItem(\"router_data\")) {\n        for (const element of JSON.parse(localStorage.router_data)[\"dhcp\"]) {\n          workingvar +=\n            '\\nservice dhcp \\nip dhcp pool \"' +\n            element.navn +\n            '\"' +\n            \"\\nnetwork \" +\n            element.ip +\n            \" \" +\n            element.subnet +\n            \"\\ndefault-router \" +\n            element.gateway;\n          if (element.domæne != undefined) {\n            workingvar += \"\\ndomain-name \" + element.domæne;\n          }\n          if (element.DNS != undefined) {\n            workingvar += \"\\ndns-server \" + element.DNS;\n          }\n          workingvar += \"\\nexit\";\n          //for (const elem of Input29.text.replace(\"-\", \" \").split(\"+\")){workingvar += \"\\nip dhcp excluded-address \"+elem}\n        }\n      }\n      localStorage.router_final = JSON.stringify({ dhcp: workingvar });\n      return workingvar;\n    } catch (error) {}\n  };\n\n  const Interfaces = () => {\n    try {\n      var workingvar = \"\";\n      if (localStorage.getItem(\"router_data\")) {\n        for (const element of JSON.parse(localStorage.router_data)[\n          \"interfaces\"\n        ]) {\n          workingvar +=\n            \"\\ninterface range \" +\n            element.porte.toString() +\n            \"\\nip address \" +\n            element.ip +\n            \" \" +\n            element.subnet;\n          if (element.description != \"\" && element.description != undefined) {\n            workingvar += \"\\ndescription \" + element.description;\n          }\n          workingvar += \"\\nexit\";\n        }\n      }\n      localStorage.router_final = JSON.stringify({ interfaces: workingvar });\n      return workingvar;\n    } catch (error) {}\n  };\n\n  window.onload = function () {\n    if (localStorage.getItem(\"router_data\")) {\n      let data = { ...formFields }\n      setFormFields(data)\n      setFormFields(JSON.parse(localStorage.router_data));\n    }\n  };\n\n  const Start = () => {\n    try {\n      if (localStorage.getItem(\"router_data\")) {\n        var today = new Date();\n        var workingvar = \"\";\n        var workingarr = JSON.parse(localStorage.router_data)[\"initial\"][0];\n        if (true == true) {\n          workingvar +=\n            \"clock set \" +\n            today.getHours() +\n            \":\" +\n            today.getMinutes() +\n            \":\" +\n            today.getSeconds() +\n            \" \" +\n            today.getDate() +\n            \" \" +\n            today.toLocaleString(\"en-us\", { month: \"short\" }) +\n            \" \" +\n            today.getFullYear();\n        }\n        workingvar += \"\\nconfigure terminal\";\n        workingvar += \"\\nset hostname \" + workingarr.hostname;\n        if (workingarr.motd != \"\") {\n          workingvar += \"\\nbanner motd #\" + workingarr.motd + \"#\";\n        }\n        localStorage.router_final = JSON.stringify({ initial: workingvar });\n        return workingvar;\n      }\n    } catch (error) {}\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Router</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <PageTitle\n          heading=\"Router\"\n          //subHeading=\"Rouer konfiguration.\"\n        />\n      </PageTitleWrapper>\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12}>\n            <Box sx={{ width: \"100%\" }}>\n              <Tabs\n                variant=\"scrollable\"\n                scrollButtons=\"auto\"\n                textColor=\"primary\"\n                indicatorColor=\"primary\"\n                value={value}\n                onChange={(event, newValue) => {\n                  setValue(newValue);\n                }}\n              >\n                <Tab label=\"Initial settings\" {...a11yProps(0)} />\n                <Tab label=\"Interfaces\" {...a11yProps(1)} />\n                <Tab label=\"Subinterfaces\" {...a11yProps(2)} />\n                <Tab label=\"DHCP\" {...a11yProps(3)} />\n              </Tabs>\n              <TabPanel value={value} index={0}>\n                <Card>\n                  <CardHeader title=\"Basale router indstillinger\" />\n                  <Divider />\n                  <CardContent>\n                    <Box\n                      component=\"form\"\n                      sx={{\n                        \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n                      }}\n                      noValidate\n                      autoComplete=\"off\"\n                    >\n                      {formFields[\"initial\"].map((form, index) => {\n                        return (\n                          <div key={0}>\n                            <TextField\n                              required\n                              id=\"initial\"\n                              name=\"hostname\"\n                              label=\"Hostname\"\n                              value={form.hostname}\n                              placeholder=\"R1\"\n                              onChange={(event) => handleFormChange(event, 0)}\n                              InputLabelProps={{ shrink: true }}\n                            />\n                            <TextField\n                              required\n                              id=\"initial\"\n                              name=\"motd\"\n                              InputLabelProps={{ shrink: true }}\n                              label=\"MOTD\"\n                              value={form.motd}\n                              placeholder=\"Authorized access only!\"\n                              onChange={(event) => handleFormChange(event, 0)}\n                            />\n                            <TextField\n                              id=\"initial\"\n                              label=\"Domæne\"\n                              name=\"domæne\"\n                              value={form.domæne}\n                              placeholder=\"domain.internal\"\n                              onChange={(event) => handleFormChange(event, 0)}\n                              InputLabelProps={{ shrink: true }}\n                            />\n                            <TextField\n                              id=\"initial\"\n                              name=\"secret\"\n                              label=\"Enable secret\"\n                              value={form.secret}\n                              placeholder=\"class\"\n                              onChange={(event) => handleFormChange(event, 0)}\n                              InputLabelProps={{ shrink: true }}\n                            />\n                            <TextField\n                              id=\"initial\"\n                              value={form.con0pass}\n                              name=\"con0pass\"\n                              label=\"Con 0 password\"\n                              placeholder=\"cisco\"\n                              onChange={(event) => handleFormChange(event, 0)}\n                              InputLabelProps={{ shrink: true }}\n                            />\n                            <TextField\n                              id=\"initial\"\n                              name=\"vtypass\"\n                              value={form.vtypass}\n                              label=\"Vty 0-15 password\"\n                              placeholder=\"cisco\"\n                              onChange={(event) => handleFormChange(event, 0)}\n                              InputLabelProps={{ shrink: true }}\n                            />\n                          </div>\n                        );\n                      })}\n                      <Divider sx={{ m: 2 }} />\n                      <Button\n                        variant=\"outlined\"\n                        color=\"error\"\n                        sx={{ margin: 1 }}\n                        size=\"medium\"\n                        onClick={() => {\n                          removeFields(\"initial\", 0);\n                          window.location.reload()\n                        }}\n                      >\n                        Ryd felter\n                      </Button>\n                      <Button\n                        onClick={handleOpen}\n                        variant=\"outlined\"\n                        sx={{ margin: 1 }}\n                        size=\"medium\"\n                        color=\"primary\"\n                      >\n                        Vis config\n                      </Button>\n\n                      <Modal\n                        open={open}\n                        onClose={handleClose}\n                        aria-labelledby=\"modal-modal-title\"\n                        aria-describedby=\"modal-modal-description\"\n                      >\n                        <Box sx={style}>\n                          <Typography\n                            id=\"modal-modal-title\"\n                            variant=\"h4\"\n                            component=\"h2\"\n                          >\n                            Konfig genereret\n                          </Typography>\n                          <TextField\n                            multiline\n                            sx={{ mt: 2 }}\n                            inputProps={{ style: { color: \"#FFC13D\" } }}\n                            maxRows={Infinity}\n                            rows={5}\n                            style={{ width: \"100%\" }}\n                            id=\"modal-modal-description\"\n                            value={Start()}\n                          ></TextField>\n                          <Button\n                            onClick={() => {\n                              navigator.clipboard.writeText(\n                                localStorage.router_initial_final\n                              );\n                            }}\n                            variant=\"contained\"\n                            sx={{ right: \"20%\", left: \"20%\", margin: 2 }}\n                            size=\"small\"\n                            color=\"secondary\"\n                          >\n                            Kopier til udklipsholder\n                          </Button>\n                        </Box>\n                      </Modal>\n                    </Box>\n                  </CardContent>\n                </Card>\n              </TabPanel>\n              <TabPanel value={value} index={1}>\n                <Card sx={{ width: \"100%\" }}>\n                  <CardHeader title=\"Interfaces\" />\n                  <Divider />\n                  <CardContent>\n                    {formFields[\"interfaces\"].map((form, index) => {\n                      return (\n                        <div key={index}>\n                          <Box // sx={{ width: '100%' }}\n                            sx={{\n                              \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n                            }}\n                            autoComplete=\"off\"\n                          >\n                            <TextField\n                              name=\"ip\"\n                              label=\"IP\"\n                              id=\"interfaces\"\n                              placeholder=\"192.168.1.1\"\n                              onChange={(event) =>\n                                handleFormChange(event, index)\n                              }\n                              value={form.ip}\n                            />\n                            <TextField\n                              name=\"subnet\"\n                              id=\"interfaces\"\n                              label=\"Subnet\"\n                              placeholder=\"255.255.255.0\"\n                              onChange={(event) =>\n                                handleFormChange(event, index)\n                              }\n                              value={form.subnet}\n                            />\n                            <TextField\n                              name=\"description\"\n                              id=\"interfaces\"\n                              label=\"Description\"\n                              placeholder=\"portbeskrivelse\"\n                              onChange={(event) =>\n                                handleFormChange(event, index)\n                              }\n                              value={form.description}\n                            />\n                            <FormControl sx={{ m: 1, width: 220 }}>\n                              <InputLabel id=\"interfaces\">Porte</InputLabel>\n                              <Select\n                                name=\"porte\"\n                                id=\"interfaces\"\n                                multiple\n                                value={form.porte}\n                                onChange={(event) =>\n                                  handleFormChange(event, index)\n                                }\n                                input={\n                                  <OutlinedInput\n                                    id=\"select-multiple-chip\"\n                                    label=\"Chip\"\n                                  />\n                                }\n                                renderValue={(selected) => (\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      flexWrap: \"wrap\",\n                                      gap: 0.5,\n                                    }}\n                                  >\n                                    {selected.map((value) => (\n                                      <Chip key={value} label={value} />\n                                    ))}\n                                  </Box>\n                                )}\n                                MenuProps={MenuProps}\n                              >\n                                {porte.map((name) => (\n                                  <MenuItem key={name} value={name}>\n                                    {name}\n                                  </MenuItem>\n                                ))}\n                              </Select>\n                            </FormControl>\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  sx={{ margin: 1.7, left: \"10%\" }}\n                                  color=\"warning\"\n                                  name=\"shutdown\"\n                                  id=\"interfaces\"\n                                  checked={form.shutdown}\n                                  onChange={(event) =>\n                                    handleFormChange(event, index)\n                                  }\n                                />\n                              }\n                              label=\"Shutdown\"\n                            />\n                            <IconButton\n                              onClick={() => removeFields(\"interfaces\", index)}\n                            >\n                              <DeleteIcon color=\"secondary\" />\n                            </IconButton>\n                            <Divider sx={{ m: 2 }} />\n                          </Box>\n                        </div>\n                      );\n                    })}\n                    <Button\n                      variant=\"contained\"\n                      sx={{ margin: 1 }}\n                      size=\"medium\"\n                      color=\"primary\"\n                      onClick={() => addFields(\"interfaces\")}\n                    >\n                      Tilføj interface\n                    </Button>\n                    <Button variant=\"outlined\" onClick={handleOpen}>\n                      Vis config\n                    </Button>\n                    <Modal\n                      open={open}\n                      onClose={handleClose}\n                      aria-labelledby=\"modal-modal-title\"\n                      aria-describedby=\"modal-modal-description\"\n                    >\n                      <Box sx={style}>\n                        <Typography\n                          id=\"modal-modal-title\"\n                          variant=\"h4\"\n                          component=\"h2\"\n                        >\n                          Konfig genereret\n                        </Typography>\n                        <TextField\n                          multiline\n                          sx={{ mt: 2 }}\n                          inputProps={{ style: { color: \"#FFC13D\" } }}\n                          maxRows={Infinity}\n                          rows={5}\n                          style={{ width: \"100%\" }}\n                          id=\"modal-modal-description\"\n                          value={\"conf terminal\" + Interfaces() + \"\\nend\"}\n                        ></TextField>\n                        <Button\n                          onClick={() => {\n                            navigator.clipboard.writeText(\n                              localStorage.router_interfaces_final\n                            );\n                          }}\n                          variant=\"contained\"\n                          sx={{ right: \"20%\", left: \"20%\", margin: 2 }}\n                          size=\"small\"\n                          color=\"secondary\"\n                        >\n                          Kopier til udklipsholder\n                        </Button>\n                      </Box>\n                    </Modal>\n                  </CardContent>\n                </Card>\n              </TabPanel>\n              <TabPanel value={value} index={2}>\n                Item Three\n              </TabPanel>\n              <TabPanel value={value} index={3}>\n                <Card sx={{ width: \"100%\" }}>\n                  <CardHeader title=\"DHCP\" />\n                  <Divider />\n                  <CardContent>\n                    {formFields[\"dhcp\"].map((form, index) => {\n                      return (\n                        <div key={index}>\n                          <Box // sx={{ width: '100%' }}\n                            sx={{\n                              \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n                            }}\n                            autoComplete=\"off\"\n                          >\n                            <TextField\n                              name=\"navn\"\n                              id=\"dhcp\"\n                              label=\"Pool navn\"\n                              placeholder=\"pool1\"\n                              onChange={(event) =>\n                                handleFormChange(event, index)\n                              }\n                              value={form.navn}\n                            />\n                            <TextField\n                              name=\"ip\"\n                              id=\"dhcp\"\n                              label=\"Netværk\"\n                              placeholder=\"192.168.1.0\"\n                              onChange={(event) =>\n                                handleFormChange(event, index)\n                              }\n                              value={form.ip}\n                            />\n                            <TextField\n                              name=\"subnet\"\n                              id=\"dhcp\"\n                              label=\"Subnet\"\n                              placeholder=\"255.255.255.0\"\n                              onChange={(event) =>\n                                handleFormChange(event, index)\n                              }\n                              value={form.subnet}\n                            />\n                            <TextField\n                              name=\"gateway\"\n                              label=\"Gateway\"\n                              id=\"dhcp\"\n                              placeholder=\"192.168.1.1\"\n                              onChange={(event) =>\n                                handleFormChange(event, index)\n                              }\n                              value={form.gateway}\n                            />\n                            <TextField\n                              name=\"domæne\"\n                              label=\"Domæne\"\n                              id=\"dhcp\"\n                              placeholder=\"domain.internal\"\n                              onChange={(event) =>\n                                handleFormChange(event, index)\n                              }\n                              value={form.domæne}\n                            />\n                            <TextField\n                              name=\"DNS\"\n                              id=\"dhcp\"\n                              label=\"DNS\"\n                              placeholder=\"1.1.1.1\"\n                              onChange={(event) =>\n                                handleFormChange(event, index)\n                              }\n                              value={form.DNS}\n                            />\n                            <IconButton\n                              onClick={() => removeFields(\"dhcp\", index)}\n                            >\n                              <DeleteIcon color=\"secondary\" />\n                            </IconButton>\n                            <Divider sx={{ m: 2 }} />\n                          </Box>\n                        </div>\n                      );\n                    })}\n                    <Button\n                      variant=\"outlined\"\n                      sx={{ margin: 1 }}\n                      size=\"medium\"\n                      color=\"primary\"\n                      onClick={() => addFields(\"dhcp\")}\n                    >\n                      Tilføj pool\n                    </Button>\n                    <Button variant=\"contained\" onClick={handleOpen}>\n                      Vis config\n                    </Button>\n                    <Modal\n                      open={open}\n                      onClose={handleClose}\n                      aria-labelledby=\"modal-modal-title\"\n                      aria-describedby=\"modal-modal-description\"\n                    >\n                      <Box sx={style}>\n                        <Typography\n                          id=\"modal-modal-title\"\n                          variant=\"h4\"\n                          component=\"h2\"\n                        >\n                          Konfig genereret\n                        </Typography>\n                        <TextField\n                          multiline\n                          sx={{ mt: 2 }}\n                          inputProps={{ style: { color: \"#FFC13D\" } }}\n                          maxRows={Infinity}\n                          rows={5}\n                          style={{ width: \"100%\" }}\n                          id=\"modal-modal-description\"\n                          value={\"conf terminal\" + DHCP() + \"\\nend\"}\n                        ></TextField>\n                        <Button\n                          onClick={() => {\n                            navigator.clipboard.writeText(\n                              localStorage.router_DHCP_final\n                            );\n                          }}\n                          variant=\"contained\"\n                          sx={{ right: \"20%\", left: \"20%\", margin: 2 }}\n                          size=\"small\"\n                          color=\"secondary\"\n                        >\n                          Kopier til udklipsholder\n                        </Button>\n                      </Box>\n                    </Modal>\n                  </CardContent>\n                </Card>\n              </TabPanel>\n            </Box>\n          </Grid>\n        </Grid>\n      </Container>\n      <Footer />\n    </>\n  );\n}\n\nexport default TabsDemo;\n"]},"metadata":{},"sourceType":"module"}